var searchIndex = {};
searchIndex['hyper'] = {"items":[[0,"","hyper","# Hyper\nHyper is a fast, modern HTTP implementation written in and for Rust. It\nis a low-level typesafe abstraction over raw HTTP, providing an elegant\nlayer over \"stringly-typed\" HTTP."],[0,"mime","",""],[11,"fmt","mime","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"fmt","","",1],[6,"Err","hyper::mime",""],[11,"from_str","mime","",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"fmt","","",2],[6,"Err","hyper::mime",""],[11,"from_str","mime","",2],[11,"fmt","","",3],[11,"clone","","",3],[11,"eq","","",3],[11,"fmt","","",3],[6,"Err","hyper::mime",""],[11,"from_str","mime","",3],[11,"fmt","","",4],[11,"clone","","",4],[11,"eq","","",4],[11,"fmt","","",4],[6,"Err","hyper::mime",""],[11,"from_str","mime","",4],[11,"fmt","","",0],[6,"Err","hyper::mime",""],[11,"from_str","mime","",0],[3,"Mime","hyper::mime","Mime, or Media Type. Encapsulates common registers types."],[4,"TopLevel","",""],[13,"Star","","",1],[13,"Text","","",1],[13,"Image","","",1],[13,"Audio","","",1],[13,"Video","","",1],[13,"Application","","",1],[13,"Multipart","","",1],[13,"Message","","",1],[13,"Model","","",1],[13,"Ext","","",1],[4,"SubLevel","",""],[13,"Star","","",2],[13,"Plain","","",2],[13,"Html","","",2],[13,"Xml","","",2],[13,"Javascript","","",2],[13,"Css","","",2],[13,"Json","","",2],[13,"WwwFormUrlEncoded","","",2],[13,"FormData","","",2],[13,"Png","","",2],[13,"Gif","","",2],[13,"Bmp","","",2],[13,"Jpeg","","",2],[13,"Ext","","",2],[4,"Attr","",""],[13,"Charset","","",3],[13,"Q","","",3],[13,"Ext","","",3],[4,"Value","",""],[13,"Utf8","","",4],[13,"Ext","","",4],[6,"Param","",""],[11,"parse","url","Parse an URL with the default `UrlParser` parameters.",5],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",5],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",5],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",5],[11,"serialize","","Return the serialization of this URL as a string.",5],[11,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",5],[11,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",5],[11,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",5],[11,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",5],[11,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",5],[11,"username","","If the URL is in a *relative scheme*, return its username.",5],[11,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",5],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",5],[11,"password","","If the URL is in a *relative scheme*, return its password, if any.",5],[11,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",5],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",5],[11,"serialize_userinfo","","Serialize the URL's username and password, if any.",5],[11,"host","","If the URL is in a *relative scheme*, return its structured host.",5],[11,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",5],[11,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",5],[11,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",5],[11,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",5],[11,"port","","If the URL is in a *relative scheme* and has a port number, return it.",5],[11,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",5],[11,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",5],[11,"path","","If the URL is in a *relative scheme*, return its path components.",5],[11,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",5],[11,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",5],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",5],[11,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",5],[11,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",5],[11,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",5],[11,"utf8","url::encoding","",6],[11,"lookup","","",6],[11,"is_utf8","","",6],[11,"decode","","",6],[11,"encode","","",6],[11,"fmt","url::host","",7],[11,"clone","","",7],[11,"eq","","",7],[11,"ne","","",7],[11,"fmt","","",8],[11,"eq","","",8],[11,"ne","","",8],[11,"clone","","",8],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",7],[11,"serialize","","Serialize the host as a string.",7],[11,"fmt","","",7],[11,"parse","","Parse an IPv6 address, without the [] square brackets.",8],[11,"serialize","","Serialize the IPv6 address to a string.",8],[11,"fmt","","",8],[11,"fmt","url::parser","",9],[11,"clone","","",9],[11,"eq","","",9],[11,"ne","","",9],[11,"description","","",9],[11,"fmt","","",9],[11,"eq","","",10],[11,"ne","","",10],[6,"Item","hyper",""],[11,"next","url::parser","",11],[11,"fmt","url::format","",12],[11,"fmt","","",13],[11,"fmt","","",14],[11,"fmt","url","",5],[11,"clone","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"fmt","","",15],[11,"clone","","",15],[11,"eq","","",15],[11,"ne","","",15],[11,"fmt","","",16],[11,"clone","","",16],[11,"eq","","",16],[11,"ne","","",16],[11,"hash","","",5],[11,"new","","Return a new UrlParser with default parameters.",17],[11,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",17],[11,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",17],[11,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",17],[11,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",17],[11,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",17],[11,"fmt","","",18],[11,"eq","","",18],[11,"ne","","",18],[11,"default_port","","",18],[11,"same_as","","",18],[11,"encode","","",5],[11,"decode","","",5],[11,"fmt","","",5],[11,"fmt","","",15],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username.",16],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",16],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",16],[11,"domain","","If the host is a domain, return the domain as a string.",16],[11,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",16],[11,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",16],[11,"serialize_path","","Serialize the path as a string.",16],[11,"serialize_userinfo","","Serialize the userinfo as a string.",16],[11,"fmt","","",16],[11,"to_url_path","std::path","",19],[11,"to_url_path","std::old_path::posix","",20],[11,"to_url_path","std::old_path::windows","",21],[11,"from_url_path","std::path","",22],[11,"from_url_path","std::old_path::posix","",20],[11,"from_url_path","std::old_path::windows","",21],[3,"Url","hyper","The parsed representation of an absolute URL."],[12,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",5],[12,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",5],[12,"query","","The query string of the URL.",5],[12,"fragment","","The fragment identifier of the URL.",5],[0,"client","","HTTP Client"],[3,"Client","hyper::client","A Client to use additional features with Requests."],[3,"RequestBuilder","","Options for an individual Request."],[4,"Body","","The target enum for the IntoBody trait."],[13,"ChunkedBody","","A Reader does not necessarily know it's size, so it is chunked.",23],[13,"SizedBody","","For Readers that can know their size, like a `File`.",23],[13,"BufBody","","A String has a size, and uses Content-Length.",23],[4,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client."],[13,"FollowNone","","Don't follow any redirects.",24],[13,"FollowAll","","Follow all redirects.",24],[13,"FollowIf","","Follow a redirect if the contained function returns true.",24],[0,"request","","Client Requests"],[3,"Request","hyper::client::request","A client request to a remote server."],[12,"url","","The target URI for this request.",25],[12,"version","","The HTTP version of this request.",25],[11,"headers","","Read the Request headers.",25],[11,"method","","Read the Request method.",25],[11,"new","","Create a new client request.",25],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",25],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",25],[11,"headers_mut","","Get a mutable reference to the Request headers.",25],[11,"send","","Completes writing the request, and returns a response to read from.",25],[11,"write","","",25],[11,"flush","","",25],[0,"response","hyper::client","Client Responses"],[3,"Response","hyper::client::response","A response for a client request to a remote server."],[12,"status","","The status from the server.",26],[12,"headers","","The headers from the server.",26],[12,"version","","The HTTP version of this response from the server.",26],[11,"new","","Creates a new response from a server.",26],[11,"status_raw","","Get the raw status code and reason.",26],[11,"into_inner","","Consumes the Request to return the NetworkStream underneath.",26],[11,"read","","",26],[8,"IntoBody","hyper::client","A helper trait to allow overloading of the body parameter."],[10,"into_body","","Consumes self into an instance of `Body`.",27],[8,"IntoUrl","","A helper trait to convert common objects into a Url."],[10,"into_url","","Consumes the object, trying to return a Url.",28],[11,"new","","Create a new Client.",29],[11,"set_ssl_verifier","","Set the SSL verifier callback for use with OpenSSL.",29],[11,"with_connector","","Create a new client with a specific connector.",29],[11,"set_redirect_policy","","Set the RedirectPolicy.",29],[11,"get","","Build a Get request.",29],[11,"head","","Build a Head request.",29],[11,"post","","Build a Post request.",29],[11,"put","","Build a Put request.",29],[11,"delete","","Build a Delete request.",29],[11,"request","","Build a new request using this Client.",29],[11,"body","","Set a request body to be sent.",30],[11,"headers","","Add additional headers to the request.",30],[11,"header","","Add an individual new header to the request.",30],[11,"send","","Execute this request and receive a Response back.",30],[11,"read","","",23],[11,"into_body","","",23],[11,"into_url","hyper","",5],[11,"clone","hyper::client","",24],[11,"default","","",24],[0,"error","hyper","HttpError and HttpResult module."],[4,"HttpError","hyper::error","A set of errors that can occur parsing HTTP streams."],[13,"HttpMethodError","","An invalid `Method`, such as `GE,T`.",31],[13,"HttpUriError","","An invalid `RequestUri`, such as `exam ple.domain`.",31],[13,"HttpVersionError","","An invalid `HttpVersion`, such as `HTP/1.1`",31],[13,"HttpHeaderError","","An invalid `Header`.",31],[13,"HttpTooLargeError","","A message head is too large to be reasonable.",31],[13,"HttpStatusError","","An invalid `Status`, such as `1337 ELITE`.",31],[13,"HttpIoError","","An `IoError` that occured while trying to read or write to a network stream.",31],[6,"HttpResult","","Result type often returned from methods that can have `HttpError`s."],[11,"clone","","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"fmt","","",31],[11,"fmt","","",31],[11,"description","","",31],[11,"cause","","",31],[11,"from_error","","",31],[11,"from_error","","",31],[11,"from_error","","",31],[0,"method","hyper","The HTTP request method"],[4,"Method","hyper::method","The Request Method (VERB)"],[13,"Options","","OPTIONS",32],[13,"Get","","GET",32],[13,"Post","","POST",32],[13,"Put","","PUT",32],[13,"Delete","","DELETE",32],[13,"Head","","HEAD",32],[13,"Trace","","TRACE",32],[13,"Connect","","CONNECT",32],[13,"Patch","","PATCH",32],[13,"Extension","","Method extentions. An example would be `let m = Extension(\"FOO\".to_string())`.",32],[11,"fmt","","",32],[11,"hash","","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"clone","","",32],[11,"safe","","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",32],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",32],[6,"Err","",""],[11,"from_str","","",32],[11,"fmt","","",32],[0,"header","hyper","Headers container, and common header fields."],[3,"EntityTag","hyper::header","An entity tag"],[12,"weak","","Weakness indicator for the tag",33],[12,"tag","","The opaque string in between the DQUOTEs",33],[3,"Quality","","Represents a quality used in quality values."],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1)."],[12,"item","","The actual contents of the field.",34],[12,"quality","","The quality (client or server preference) for the value.",34],[3,"AccessControlAllowHeaders","","The `Access-Control-Allow-Headers` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"AccessControlAllowMethods","","The `Access-Control-Allow-Methods` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"AccessControlMaxAge","","The `Access-Control-Max-Age` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"AccessControlRequestHeaders","","The `Access-Control-Request-Headers` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"AccessControlRequestMethod","","The `Access-Control-Request-Method` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"Accept","","The `Accept` header."],[3,"AcceptCharset","","The `Accept-Charset` header"],[3,"AcceptEncoding","","The `Accept-Encoding` header"],[3,"AcceptLanguage","","The `Accept-Language` header"],[3,"Allow","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.4.1"],[3,"Authorization","","The `Authorization` header field."],[3,"Basic","","Credential holder for Basic Authentication"],[12,"username","","The username as a possibly empty string",35],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",35],[3,"CacheControl","","The Cache-Control header."],[3,"Connection","","The `Connection` header."],[3,"ContentLength","","The `Content-Length` header."],[3,"ContentType","","The `Content-Type` header."],[3,"Cookie","","The `Cookie` header. Defined in [RFC6265](tools.ietf.org/html/rfc6265#section-5.4):"],[3,"Date","","The `Date` header field."],[3,"Etag","","The `Etag` header."],[3,"Expires","","The `Expires` header field."],[3,"Host","","The `Host` header."],[12,"hostname","","The hostname, such a example.domain.",36],[12,"port","","An optional port number.",36],[3,"IfModifiedSince","","The `If-Modified-Since` header field."],[3,"IfUnmodifiedSince","","The `If-Unmodified-Since` header field."],[3,"LastModified","","The `LastModified` header field."],[3,"Location","","The `Location` header."],[3,"Referer","","The `Referer` header."],[3,"Server","","The `Server` header field."],[3,"SetCookie","","The `Set-Cookie` header"],[3,"TransferEncoding","","The `Transfer-Encoding` header."],[3,"Upgrade","","The `Upgrade` header."],[3,"UserAgent","","The `User-Agent` header field."],[3,"Headers","","A map of header fields on requests and responses."],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map."],[3,"HeaderView","","Returned with the `HeadersItems` iterator."],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header."],[4,"Charset","","A Mime charset."],[13,"Us_Ascii","","US ASCII",37],[13,"Iso_8859_1","","ISO-8859-1",37],[13,"Iso_8859_2","","ISO-8859-2",37],[13,"Iso_8859_3","","ISO-8859-3",37],[13,"Iso_8859_4","","ISO-8859-4",37],[13,"Iso_8859_5","","ISO-8859-5",37],[13,"Iso_8859_6","","ISO-8859-6",37],[13,"Iso_8859_7","","ISO-8859-7",37],[13,"Iso_8859_8","","ISO-8859-8",37],[13,"Iso_8859_9","","ISO-8859-9",37],[13,"Iso_8859_10","","ISO-8859-10",37],[13,"Shift_Jis","","Shift_JIS",37],[13,"Euc_Jp","","EUC-JP",37],[13,"Iso_2022_Kr","","ISO-2022-KR",37],[13,"Euc_Kr","","EUC-KR",37],[13,"Iso_2022_Jp","","ISO-2022-JP",37],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",37],[13,"Iso_8859_6_E","","ISO-8859-6-E",37],[13,"Iso_8859_6_I","","ISO-8859-6-I",37],[13,"Iso_8859_8_E","","ISO-8859-8-E",37],[13,"Iso_8859_8_I","","ISO-8859-8-I",37],[13,"Gb2312","","GB2312",37],[13,"Big5","","Big5",37],[13,"Koi8_R","","KOI8-R",37],[13,"Ext","","An arbitrary charset specified as a string",37],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header."],[13,"Chunked","","The `chunked` encoding.",38],[13,"Gzip","","The `gzip` encoding.",38],[13,"Deflate","","The `deflate` encoding.",38],[13,"Compress","","The `compress` encoding.",38],[13,"Identity","","The `identity` encoding.",38],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",38],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[13,"AllowStar","","Allow all origins",39],[13,"AllowOrigin","","Allow one particular origin",39],[4,"CacheDirective","","CacheControl contains a list of these directives."],[13,"NoCache","","\"no-cache\"",40],[13,"NoStore","","\"no-store\"",40],[13,"NoTransform","","\"no-transform\"",40],[13,"OnlyIfCached","","\"only-if-cached\"",40],[13,"MaxAge","","\"max-age=delta\"",40],[13,"MaxStale","","\"max-stale=delta\"",40],[13,"MinFresh","","\"min-fresh=delta\"",40],[13,"MustRevalidate","","\"must-revalidate\"",40],[13,"Public","","\"public\"",40],[13,"Private","","\"private\"",40],[13,"ProxyRevalidate","","\"proxy-revalidate\"",40],[13,"SMaxAge","","\"s-maxage=delta\"",40],[13,"Extension","","Extension directives. Optionally include an argument.",40],[4,"ConnectionOption","","Values that can be in the `Connection` header."],[13,"KeepAlive","","The `keep-alive` connection value.",41],[13,"Close","","The `close` connection value.",41],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",41],[4,"IfMatch","","The `If-Match` header"],[13,"Any","","This corresponds to '*'.",42],[13,"EntityTags","","The header field names which will influence the response representation.",42],[4,"IfNoneMatch","","The `If-None-Match` header defined by HTTP/1.1."],[13,"Any","","This corresponds to '*'.",43],[13,"EntityTags","","The header field names which will influence the response representation.",43],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0."],[13,"NoCache","","Corresponds to the `no-cache` value.",44],[13,"Ext","","Every value other than `no-cache`.",44],[4,"Protocol","","Protocol values that can appear in the Upgrade header."],[13,"WebSocket","","The websocket protocol.",45],[13,"ProtocolExt","","Some other less common protocol.",45],[4,"Vary","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.1.4"],[13,"Any","","This corresponds to '*'.",46],[13,"Headers","","The header field names which will influence the response representation.",46],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0"],[5,"q","","Convenience function to create a `Quality` fromt a float."],[11,"fmt","","",47],[11,"eq","","",47],[11,"ne","","",47],[11,"clone","","",47],[11,"header_name","","",47],[11,"parse_header","","",47],[11,"fmt_header","","",47],[11,"fmt","","",48],[11,"eq","","",48],[11,"ne","","",48],[11,"clone","","",48],[11,"header_name","","",48],[11,"parse_header","","",48],[11,"fmt_header","","",48],[11,"fmt","","",39],[11,"eq","","",39],[11,"ne","","",39],[11,"clone","","",39],[11,"header_name","","",39],[11,"parse_header","","",39],[11,"fmt_header","","",39],[11,"fmt","","",49],[11,"eq","","",49],[11,"ne","","",49],[11,"clone","","",49],[11,"header_name","","",49],[11,"parse_header","","",49],[11,"fmt_header","","",49],[11,"fmt","","",50],[11,"eq","","",50],[11,"ne","","",50],[11,"clone","","",50],[11,"header_name","","",50],[11,"parse_header","","",50],[11,"fmt_header","","",50],[11,"fmt","","",51],[11,"eq","","",51],[11,"ne","","",51],[11,"clone","","",51],[11,"header_name","","",51],[11,"parse_header","","",51],[11,"fmt_header","","",51],[11,"fmt","","",47],[11,"eq","","",47],[11,"ne","","",47],[11,"clone","","",47],[11,"header_name","","",47],[11,"parse_header","","",47],[11,"fmt_header","","",47],[11,"fmt","","",48],[11,"eq","","",48],[11,"ne","","",48],[11,"clone","","",48],[11,"header_name","","",48],[11,"parse_header","","",48],[11,"fmt_header","","",48],[11,"fmt","","",39],[11,"eq","","",39],[11,"ne","","",39],[11,"clone","","",39],[11,"header_name","","",39],[11,"parse_header","","",39],[11,"fmt_header","","",39],[11,"fmt","","",49],[11,"eq","","",49],[11,"ne","","",49],[11,"clone","","",49],[11,"header_name","","",49],[11,"parse_header","","",49],[11,"fmt_header","","",49],[11,"fmt","","",50],[11,"eq","","",50],[11,"ne","","",50],[11,"clone","","",50],[11,"header_name","","",50],[11,"parse_header","","",50],[11,"fmt_header","","",50],[11,"fmt","","",51],[11,"eq","","",51],[11,"ne","","",51],[11,"clone","","",51],[11,"header_name","","",51],[11,"parse_header","","",51],[11,"fmt_header","","",51],[11,"fmt","","",52],[11,"eq","","",52],[11,"ne","","",52],[11,"clone","","",52],[11,"deref","","",52],[11,"deref_mut","","",52],[11,"header_name","","",52],[11,"parse_header","","",52],[11,"fmt_header","","",52],[11,"fmt","","",52],[11,"fmt","","",53],[11,"eq","","",53],[11,"ne","","",53],[11,"clone","","",53],[11,"deref","","",53],[11,"deref_mut","","",53],[11,"header_name","","",53],[11,"parse_header","","",53],[11,"fmt_header","","",53],[11,"fmt","","",53],[11,"fmt","","",54],[11,"eq","","",54],[11,"ne","","",54],[11,"clone","","",54],[11,"deref","","",54],[11,"deref_mut","","",54],[11,"header_name","","",54],[11,"parse_header","","",54],[11,"fmt_header","","",54],[11,"fmt","","",54],[11,"fmt","","",55],[11,"eq","","",55],[11,"ne","","",55],[11,"clone","","",55],[11,"deref","","",55],[11,"deref_mut","","",55],[11,"header_name","","",55],[11,"parse_header","","",55],[11,"fmt_header","","",55],[11,"fmt","","",55],[11,"fmt","","",56],[11,"eq","","",56],[11,"ne","","",56],[11,"clone","","",56],[11,"deref","","",56],[11,"deref_mut","","",56],[11,"header_name","","",56],[11,"parse_header","","",56],[11,"fmt_header","","",56],[11,"fmt","","",56],[11,"fmt","","",57],[11,"eq","","",57],[11,"ne","","",57],[11,"clone","","",57],[11,"deref","","",57],[11,"deref_mut","","",57],[11,"header_name","","",57],[11,"parse_header","","",57],[11,"fmt_header","","",57],[11,"scheme","collections::string","",58],[11,"fmt_scheme","","",58],[11,"fmt","hyper::header","",35],[11,"eq","","",35],[11,"ne","","",35],[11,"clone","","",35],[11,"scheme","","",35],[11,"fmt_scheme","","",35],[11,"from_str","","",35],[11,"fmt","","",59],[11,"clone","","",59],[11,"eq","","",59],[11,"ne","","",59],[11,"deref","","",59],[11,"deref_mut","","",59],[11,"header_name","","",59],[11,"parse_header","","",59],[11,"fmt_header","","",59],[11,"fmt","","",40],[11,"clone","","",40],[11,"eq","","",40],[11,"ne","","",40],[11,"fmt","","",40],[11,"from_str","","",40],[11,"fmt","","",60],[11,"eq","","",60],[11,"ne","","",60],[11,"clone","","",60],[11,"deref","","",60],[11,"deref_mut","","",60],[11,"header_name","","",60],[11,"parse_header","","",60],[11,"fmt_header","","",60],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",60],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",60],[11,"fmt","","",61],[11,"eq","","",61],[11,"ne","","",61],[11,"clone","","",61],[11,"deref","","",61],[11,"deref_mut","","",61],[11,"fmt","","",41],[11,"eq","","",41],[11,"ne","","",41],[11,"clone","","",41],[11,"from_str","","",41],[11,"fmt","","",41],[11,"header_name","","",61],[11,"parse_header","","",61],[11,"fmt_header","","",61],[11,"fmt","","",62],[11,"eq","","",62],[11,"ne","","",62],[11,"clone","","",62],[11,"deref","","",62],[11,"deref_mut","","",62],[11,"header_name","","",62],[11,"parse_header","","",62],[11,"fmt_header","","",62],[11,"fmt","","",62],[11,"fmt","","",63],[11,"eq","","",63],[11,"ne","","",63],[11,"clone","","",63],[11,"deref","","",63],[11,"deref_mut","","",63],[11,"header_name","","",63],[11,"parse_header","","",63],[11,"fmt_header","","",63],[11,"fmt","","",63],[11,"fmt","","",64],[11,"clone","","",64],[11,"eq","","",64],[11,"ne","","",64],[11,"deref","","",64],[11,"deref_mut","","",64],[11,"header_name","","",64],[11,"parse_header","","",64],[11,"fmt_header","","",64],[11,"from_str","","",64],[11,"fmt","","",65],[11,"eq","","",65],[11,"ne","","",65],[11,"clone","","",65],[11,"deref","","",65],[11,"deref_mut","","",65],[11,"header_name","","",65],[11,"parse_header","","",65],[11,"fmt_header","","",65],[11,"fmt","","",66],[11,"clone","","",66],[11,"eq","","",66],[11,"ne","","",66],[11,"deref","","",66],[11,"deref_mut","","",66],[11,"header_name","","",66],[11,"parse_header","","",66],[11,"fmt_header","","",66],[11,"from_str","","",66],[11,"fmt","","",36],[11,"eq","","",36],[11,"ne","","",36],[11,"clone","","",36],[11,"header_name","","",36],[11,"parse_header","","",36],[11,"fmt_header","","",36],[11,"fmt","","",42],[11,"eq","","",42],[11,"ne","","",42],[11,"clone","","",42],[11,"header_name","","",42],[11,"parse_header","","",42],[11,"fmt_header","","",42],[11,"fmt","","",67],[11,"clone","","",67],[11,"eq","","",67],[11,"ne","","",67],[11,"deref","","",67],[11,"deref_mut","","",67],[11,"header_name","","",67],[11,"parse_header","","",67],[11,"fmt_header","","",67],[11,"from_str","","",67],[11,"fmt","","",68],[11,"clone","","",68],[11,"eq","","",68],[11,"ne","","",68],[11,"deref","","",68],[11,"deref_mut","","",68],[11,"header_name","","",68],[11,"parse_header","","",68],[11,"fmt_header","","",68],[11,"from_str","","",68],[11,"fmt","","",43],[11,"eq","","",43],[11,"ne","","",43],[11,"clone","","",43],[11,"header_name","","",43],[11,"parse_header","","",43],[11,"fmt_header","","",43],[11,"fmt","","",69],[11,"clone","","",69],[11,"eq","","",69],[11,"ne","","",69],[11,"deref","","",69],[11,"deref_mut","","",69],[11,"header_name","","",69],[11,"parse_header","","",69],[11,"fmt_header","","",69],[11,"from_str","","",69],[11,"fmt","","",70],[11,"eq","","",70],[11,"ne","","",70],[11,"clone","","",70],[11,"deref","","",70],[11,"deref_mut","","",70],[11,"header_name","","",70],[11,"parse_header","","",70],[11,"fmt_header","","",70],[11,"fmt","","",70],[11,"fmt","","",44],[11,"eq","","",44],[11,"ne","","",44],[11,"clone","","",44],[11,"header_name","","",44],[11,"parse_header","","",44],[11,"fmt_header","","",44],[11,"fmt","","",71],[11,"eq","","",71],[11,"ne","","",71],[11,"clone","","",71],[11,"deref","","",71],[11,"deref_mut","","",71],[11,"header_name","","",71],[11,"parse_header","","",71],[11,"fmt_header","","",71],[11,"fmt","","",71],[11,"fmt","","",72],[11,"eq","","",72],[11,"ne","","",72],[11,"clone","","",72],[11,"deref","","",72],[11,"deref_mut","","",72],[11,"header_name","","",72],[11,"parse_header","","",72],[11,"fmt_header","","",72],[11,"fmt","","",72],[11,"fmt","","",73],[11,"eq","","",73],[11,"ne","","",73],[11,"clone","","",73],[11,"deref","","",73],[11,"deref_mut","","",73],[11,"header_name","","",73],[11,"parse_header","","",73],[11,"fmt_header","","",73],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",73],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",73],[11,"fmt","","",74],[11,"eq","","",74],[11,"ne","","",74],[11,"clone","","",74],[11,"deref","","",74],[11,"deref_mut","","",74],[11,"header_name","","",74],[11,"parse_header","","",74],[11,"fmt_header","","",74],[11,"fmt","","",74],[11,"fmt","","",75],[11,"eq","","",75],[11,"ne","","",75],[11,"clone","","",75],[11,"deref","","",75],[11,"deref_mut","","",75],[11,"fmt","","",45],[11,"eq","","",45],[11,"ne","","",45],[11,"clone","","",45],[11,"from_str","","",45],[11,"fmt","","",45],[11,"header_name","","",75],[11,"parse_header","","",75],[11,"fmt_header","","",75],[11,"fmt","","",76],[11,"eq","","",76],[11,"ne","","",76],[11,"clone","","",76],[11,"deref","","",76],[11,"deref_mut","","",76],[11,"header_name","","",76],[11,"parse_header","","",76],[11,"fmt_header","","",76],[11,"fmt","","",76],[11,"fmt","","",46],[11,"eq","","",46],[11,"ne","","",46],[11,"clone","","",46],[11,"header_name","","",46],[11,"parse_header","","",46],[11,"fmt_header","","",46],[11,"fmt","","",47],[11,"eq","","",47],[11,"ne","","",47],[11,"clone","","",47],[11,"header_name","","",47],[11,"parse_header","","",47],[11,"fmt_header","","",47],[11,"fmt","","",48],[11,"eq","","",48],[11,"ne","","",48],[11,"clone","","",48],[11,"header_name","","",48],[11,"parse_header","","",48],[11,"fmt_header","","",48],[11,"fmt","","",39],[11,"eq","","",39],[11,"ne","","",39],[11,"clone","","",39],[11,"header_name","","",39],[11,"parse_header","","",39],[11,"fmt_header","","",39],[11,"fmt","","",49],[11,"eq","","",49],[11,"ne","","",49],[11,"clone","","",49],[11,"header_name","","",49],[11,"parse_header","","",49],[11,"fmt_header","","",49],[11,"fmt","","",50],[11,"eq","","",50],[11,"ne","","",50],[11,"clone","","",50],[11,"header_name","","",50],[11,"parse_header","","",50],[11,"fmt_header","","",50],[11,"fmt","","",51],[11,"eq","","",51],[11,"ne","","",51],[11,"clone","","",51],[11,"header_name","","",51],[11,"parse_header","","",51],[11,"fmt_header","","",51],[11,"fmt","","",52],[11,"eq","","",52],[11,"ne","","",52],[11,"clone","","",52],[11,"deref","","",52],[11,"deref_mut","","",52],[11,"header_name","","",52],[11,"parse_header","","",52],[11,"fmt_header","","",52],[11,"fmt","","",52],[11,"fmt","","",53],[11,"eq","","",53],[11,"ne","","",53],[11,"clone","","",53],[11,"deref","","",53],[11,"deref_mut","","",53],[11,"header_name","","",53],[11,"parse_header","","",53],[11,"fmt_header","","",53],[11,"fmt","","",53],[11,"fmt","","",54],[11,"eq","","",54],[11,"ne","","",54],[11,"clone","","",54],[11,"deref","","",54],[11,"deref_mut","","",54],[11,"header_name","","",54],[11,"parse_header","","",54],[11,"fmt_header","","",54],[11,"fmt","","",54],[11,"fmt","","",55],[11,"eq","","",55],[11,"ne","","",55],[11,"clone","","",55],[11,"deref","","",55],[11,"deref_mut","","",55],[11,"header_name","","",55],[11,"parse_header","","",55],[11,"fmt_header","","",55],[11,"fmt","","",55],[11,"fmt","","",56],[11,"eq","","",56],[11,"ne","","",56],[11,"clone","","",56],[11,"deref","","",56],[11,"deref_mut","","",56],[11,"header_name","","",56],[11,"parse_header","","",56],[11,"fmt_header","","",56],[11,"fmt","","",56],[11,"fmt","","",57],[11,"eq","","",57],[11,"ne","","",57],[11,"clone","","",57],[11,"deref","","",57],[11,"deref_mut","","",57],[11,"header_name","","",57],[11,"parse_header","","",57],[11,"fmt_header","","",57],[11,"scheme","collections::string","",58],[11,"fmt_scheme","","",58],[11,"fmt","hyper::header","",35],[11,"eq","","",35],[11,"ne","","",35],[11,"clone","","",35],[11,"scheme","","",35],[11,"fmt_scheme","","",35],[11,"from_str","","",35],[11,"fmt","","",59],[11,"clone","","",59],[11,"eq","","",59],[11,"ne","","",59],[11,"deref","","",59],[11,"deref_mut","","",59],[11,"header_name","","",59],[11,"parse_header","","",59],[11,"fmt_header","","",59],[11,"fmt","","",40],[11,"clone","","",40],[11,"eq","","",40],[11,"ne","","",40],[11,"fmt","","",40],[11,"from_str","","",40],[11,"fmt","","",60],[11,"eq","","",60],[11,"ne","","",60],[11,"clone","","",60],[11,"deref","","",60],[11,"deref_mut","","",60],[11,"header_name","","",60],[11,"parse_header","","",60],[11,"fmt_header","","",60],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",60],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",60],[11,"fmt","","",61],[11,"eq","","",61],[11,"ne","","",61],[11,"clone","","",61],[11,"deref","","",61],[11,"deref_mut","","",61],[11,"fmt","","",41],[11,"eq","","",41],[11,"ne","","",41],[11,"clone","","",41],[11,"from_str","","",41],[11,"fmt","","",41],[11,"header_name","","",61],[11,"parse_header","","",61],[11,"fmt_header","","",61],[11,"fmt","","",62],[11,"eq","","",62],[11,"ne","","",62],[11,"clone","","",62],[11,"deref","","",62],[11,"deref_mut","","",62],[11,"header_name","","",62],[11,"parse_header","","",62],[11,"fmt_header","","",62],[11,"fmt","","",62],[11,"fmt","","",63],[11,"eq","","",63],[11,"ne","","",63],[11,"clone","","",63],[11,"deref","","",63],[11,"deref_mut","","",63],[11,"header_name","","",63],[11,"parse_header","","",63],[11,"fmt_header","","",63],[11,"fmt","","",63],[11,"fmt","","",64],[11,"clone","","",64],[11,"eq","","",64],[11,"ne","","",64],[11,"deref","","",64],[11,"deref_mut","","",64],[11,"header_name","","",64],[11,"parse_header","","",64],[11,"fmt_header","","",64],[11,"from_str","","",64],[11,"fmt","","",65],[11,"eq","","",65],[11,"ne","","",65],[11,"clone","","",65],[11,"deref","","",65],[11,"deref_mut","","",65],[11,"header_name","","",65],[11,"parse_header","","",65],[11,"fmt_header","","",65],[11,"fmt","","",66],[11,"clone","","",66],[11,"eq","","",66],[11,"ne","","",66],[11,"deref","","",66],[11,"deref_mut","","",66],[11,"header_name","","",66],[11,"parse_header","","",66],[11,"fmt_header","","",66],[11,"from_str","","",66],[11,"fmt","","",36],[11,"eq","","",36],[11,"ne","","",36],[11,"clone","","",36],[11,"header_name","","",36],[11,"parse_header","","",36],[11,"fmt_header","","",36],[11,"fmt","","",42],[11,"eq","","",42],[11,"ne","","",42],[11,"clone","","",42],[11,"header_name","","",42],[11,"parse_header","","",42],[11,"fmt_header","","",42],[11,"fmt","","",67],[11,"clone","","",67],[11,"eq","","",67],[11,"ne","","",67],[11,"deref","","",67],[11,"deref_mut","","",67],[11,"header_name","","",67],[11,"parse_header","","",67],[11,"fmt_header","","",67],[11,"from_str","","",67],[11,"fmt","","",68],[11,"clone","","",68],[11,"eq","","",68],[11,"ne","","",68],[11,"deref","","",68],[11,"deref_mut","","",68],[11,"header_name","","",68],[11,"parse_header","","",68],[11,"fmt_header","","",68],[11,"from_str","","",68],[11,"fmt","","",43],[11,"eq","","",43],[11,"ne","","",43],[11,"clone","","",43],[11,"header_name","","",43],[11,"parse_header","","",43],[11,"fmt_header","","",43],[11,"fmt","","",69],[11,"clone","","",69],[11,"eq","","",69],[11,"ne","","",69],[11,"deref","","",69],[11,"deref_mut","","",69],[11,"header_name","","",69],[11,"parse_header","","",69],[11,"fmt_header","","",69],[11,"from_str","","",69],[11,"fmt","","",70],[11,"eq","","",70],[11,"ne","","",70],[11,"clone","","",70],[11,"deref","","",70],[11,"deref_mut","","",70],[11,"header_name","","",70],[11,"parse_header","","",70],[11,"fmt_header","","",70],[11,"fmt","","",70],[11,"fmt","","",44],[11,"eq","","",44],[11,"ne","","",44],[11,"clone","","",44],[11,"header_name","","",44],[11,"parse_header","","",44],[11,"fmt_header","","",44],[11,"fmt","","",71],[11,"eq","","",71],[11,"ne","","",71],[11,"clone","","",71],[11,"deref","","",71],[11,"deref_mut","","",71],[11,"header_name","","",71],[11,"parse_header","","",71],[11,"fmt_header","","",71],[11,"fmt","","",71],[11,"fmt","","",72],[11,"eq","","",72],[11,"ne","","",72],[11,"clone","","",72],[11,"deref","","",72],[11,"deref_mut","","",72],[11,"header_name","","",72],[11,"parse_header","","",72],[11,"fmt_header","","",72],[11,"fmt","","",72],[11,"fmt","","",73],[11,"eq","","",73],[11,"ne","","",73],[11,"clone","","",73],[11,"deref","","",73],[11,"deref_mut","","",73],[11,"header_name","","",73],[11,"parse_header","","",73],[11,"fmt_header","","",73],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",73],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",73],[11,"fmt","","",74],[11,"eq","","",74],[11,"ne","","",74],[11,"clone","","",74],[11,"deref","","",74],[11,"deref_mut","","",74],[11,"header_name","","",74],[11,"parse_header","","",74],[11,"fmt_header","","",74],[11,"fmt","","",74],[11,"fmt","","",75],[11,"eq","","",75],[11,"ne","","",75],[11,"clone","","",75],[11,"deref","","",75],[11,"deref_mut","","",75],[11,"fmt","","",45],[11,"eq","","",45],[11,"ne","","",45],[11,"clone","","",45],[11,"from_str","","",45],[11,"fmt","","",45],[11,"header_name","","",75],[11,"parse_header","","",75],[11,"fmt_header","","",75],[11,"fmt","","",76],[11,"eq","","",76],[11,"ne","","",76],[11,"clone","","",76],[11,"deref","","",76],[11,"deref_mut","","",76],[11,"header_name","","",76],[11,"parse_header","","",76],[11,"fmt_header","","",76],[11,"fmt","","",76],[11,"fmt","","",46],[11,"eq","","",46],[11,"ne","","",46],[11,"clone","","",46],[11,"header_name","","",46],[11,"parse_header","","",46],[11,"fmt_header","","",46],[11,"eq","","",37],[11,"ne","","",37],[11,"fmt","","",37],[11,"clone","","",37],[11,"fmt","","",37],[11,"from_str","","",37],[11,"fmt","","",38],[11,"eq","","",38],[11,"ne","","",38],[11,"clone","","",38],[11,"fmt","","",38],[11,"from_str","","",38],[11,"fmt","","",33],[11,"eq","","",33],[11,"ne","","",33],[11,"clone","","",33],[11,"fmt","","",33],[11,"from_str","","",33],[11,"partial_cmp","","",77],[11,"lt","","",77],[11,"le","","",77],[11,"gt","","",77],[11,"ge","","",77],[11,"eq","","",77],[11,"ne","","",77],[11,"cmp","","",77],[11,"fmt","","",77],[11,"clone","","",77],[11,"fmt","","",77],[11,"from_i64","","",77],[11,"from_u64","","",77],[11,"from_f64","","",77],[11,"to_i64","","",77],[11,"to_u64","","",77],[11,"to_f64","","",77],[11,"default","","",77],[11,"fmt","","",34],[11,"eq","","",34],[11,"ne","","",34],[11,"clone","","",34],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",34],[11,"partial_cmp","","",34],[11,"fmt","","",34],[11,"from_str","","",34],[0,"parsing","","Utility functions for Header implementations."],[5,"from_one_raw_str","hyper::header::parsing","Reads a single raw string when parsing a header"],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec."],[5,"from_one_comma_delimited","","Reads a comma-delimited raw string into a Vec."],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string."],[5,"tm_from_str","","Get a Tm from HTTP date formats."],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header."],[10,"scheme","","An optional Scheme name.",78],[10,"fmt_scheme","","Format the Scheme data into a header value.",78],[8,"Header","","A trait for any object that will represent a header field and value."],[10,"header_name","","Returns the name of the header field this belongs to.",79],[10,"parse_header","","Parse a header from a raw stream of bytes.",79],[8,"HeaderFormat","","A trait for any object that will represent a header field and value."],[10,"fmt_header","","Format a header to be output into a TcpStream.",80],[11,"clone","alloc::boxed","",81],[11,"clone","hyper::header","",82],[11,"new","","Creates a new, empty headers map.",82],[11,"set","","Set a header field to the corresponding value.",82],[11,"get_raw","","Access the raw value of a header.",82],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",82],[11,"remove_raw","","Remove a header set by set_raw",82],[11,"get","","Get a reference to the header field's value, if it exists.",82],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",82],[11,"has","","Returns a boolean of whether a certain header is in the map.",82],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",82],[11,"iter","","Returns an iterator over the header fields.",82],[11,"len","","Returns the number of headers in the map.",82],[11,"clear","","Remove all headers from the map.",82],[11,"fmt","","",82],[11,"fmt","","",82],[6,"Item","",""],[11,"next","","",83],[11,"is","","Check if a HeaderView is a certain Header.",84],[11,"name","","Get the Header name as a slice.",84],[11,"value","","Cast the value to a certain Header type.",84],[11,"value_string","","Get just the header value as a String.",84],[11,"fmt","","",84],[11,"fmt","","",84],[11,"extend","","",82],[11,"from_iter","","",82],[11,"fmt","","",85],[11,"fmt","","",85],[0,"http","hyper","Pieces pertaining to the HTTP message protocol."],[3,"Incoming","hyper::http","An Incoming Message head. Includes request/status line, and headers."],[12,"version","","HTTP version of the message.",86],[12,"subject","","Subject (request line or status line) of Incoming message.",86],[12,"headers","","Headers of the Incoming message.",86],[3,"RawStatus","","The raw status code and reason-phrase."],[4,"HttpReader","","Readers to handle different Transfer-Encodings."],[13,"SizedReader","","A Reader used when a Content-Length header is passed with a positive integer.",87],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",87],[13,"EofReader","","A Reader used for responses that don't indicate a length or chunked.",87],[13,"EmptyReader","","A Reader used for messages that should never have a body.",87],[4,"HttpWriter","","Writers to handle different Transfer-Encodings."],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is determined.",88],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",88],[13,"SizedWriter","","A Writer for when Content-Length is set.",88],[13,"EmptyWriter","","A writer that should not write any body.",88],[5,"parse_request","","Parses a request into an Incoming message head."],[5,"parse_response","","Parses a response into an Incoming message head."],[17,"SP","",""],[17,"CR","",""],[17,"LF","",""],[17,"STAR","",""],[17,"LINE_ENDING","",""],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",87],[11,"read","","",87],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",88],[11,"get_ref","","Access the inner Writer.",88],[11,"get_mut","","Access the inner Writer mutably.",88],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",88],[11,"write","","",88],[11,"flush","","",88],[11,"fmt","","",89],[11,"eq","","",89],[11,"ne","","",89],[11,"clone","","",89],[0,"net","hyper","A collection of traits abstracting over Listeners and Streams."],[3,"NetworkConnections","hyper::net","An iterator wrapper over a NetworkAcceptor."],[3,"HttpConnector","","A connector that will produce HttpStreams."],[4,"Fresh","","The write-status indicating headers have not been written."],[4,"Streaming","","The write-status indicating headers have been written."],[4,"HttpListener","","A `NetworkListener` for `HttpStream`s."],[13,"Http","","Http variant.",90],[13,"Https","","Https variant. The two paths point to the certificate and key PEM files, in that order.",90],[4,"HttpStream","","A wrapper around a TcpStream."],[13,"Http","","A stream over the HTTP protocol.",91],[13,"Https","","A stream over the HTTP protocol, protected by SSL.",91],[6,"ContextVerifier","","A method that can set verification methods on an SSL context"],[8,"NetworkListener","","An abstraction to listen for connections on a certain port."],[16,"Stream","hyper::net::NetworkListener","The stream produced for each connection."],[10,"accept","hyper::net","Listens on a socket.\nReturns an iterator of streams.",92],[10,"socket_addr","","Get the address this Listener ended up listening on.",92],[11,"incoming","","Closes the Acceptor, so no more incoming connections will be handled.\nReturns an iterator over incoming connections.",92],[8,"NetworkStream","","An abstraction over streams that a Server can utilize."],[10,"peer_addr","","Get the remote address of the underlying connection.",93],[8,"NetworkConnector","","A connector creates a NetworkStream."],[16,"Stream","hyper::net::NetworkConnector","Type of Stream to create"],[10,"connect","hyper::net","Connect to a remote address.",94],[6,"Item","",""],[11,"next","","",95],[11,"fmt","alloc::boxed","",81],[11,"clone","","",81],[11,"is","hyper","Is the underlying type in this trait object a T?",93],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",93],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",93],[11,"downcast","","If the underlying type is T, extract it.",93],[11,"clone","hyper::net","",90],[11,"http","","Start listening to an address over HTTP.",90],[11,"https","","Start listening to an address over HTTPS.",90],[6,"Stream","",""],[11,"accept","","",90],[11,"socket_addr","","",90],[11,"clone","","",91],[11,"read","","",91],[11,"write","","",91],[11,"flush","","",91],[11,"peer_addr","","",91],[6,"Stream","",""],[11,"connect","","",96],[0,"server","hyper","HTTP Server"],[3,"Server","hyper::server","A server can listen on a TCP socket."],[3,"Listening","","A listening server, which can later be closed."],[12,"socket","","The socket addresses that the server is bound to.",97],[0,"request","","Server Requests"],[3,"Request","hyper::server::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`."],[12,"remote_addr","","The IP address of the remote connection.",98],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",98],[12,"headers","","The headers of the incoming request.",98],[12,"uri","","The target request-uri for this request.",98],[12,"version","","The version of HTTP for this request.",98],[11,"new","","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",98],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",98],[11,"read","","",98],[0,"response","hyper::server","Server Responses"],[3,"Response","hyper::server::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`."],[12,"version","","The HTTP version of this response.",99],[11,"status","","The status of this response.",99],[11,"headers","","The headers of this response.",99],[11,"construct","","Construct a Response from its constituent parts.",99],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",99],[11,"new","","Creates a new Response that can be used to write to a network stream.",99],[11,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",99],[11,"status_mut","","Get a mutable reference to the status.",99],[11,"headers_mut","","Get a mutable reference to the Headers.",99],[11,"end","","Flushes all writing of a response to the client.",99],[11,"write","","",99],[11,"flush","","",99],[8,"Handler","hyper::server","A handler that can handle incoming requests for a server."],[10,"handle","","Receives a `Request`/`Response` pair, and should perform some action on them.",100],[11,"new","","Creates a new server with the provided handler.",101],[11,"http","","Creates a new server that will handle `HttpStream`s.",101],[11,"https","","Creates a new server that will handler `HttpStreams`s using a TLS connection.",101],[11,"listen_threads","","Binds to a socket, and starts handling connections using a task pool.",101],[11,"listen","","Binds to a socket and starts handling connections.",101],[11,"with_listener","","Creates a new server that will handle `HttpStream`s.",101],[11,"close","","Stop the server from listening to its socket address.",97],[0,"status","hyper","HTTP status codes"],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.)."],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",102],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",102],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",102],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",102],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",102],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",102],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",102],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",102],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",102],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",102],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",102],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",102],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",102],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",102],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",102],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",102],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",102],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",102],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",102],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",102],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",102],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",102],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",102],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",102],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",102],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",102],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",102],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",102],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",102],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",102],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",102],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",102],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",102],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",102],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",102],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",102],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",102],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",102],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",102],[13,"ImATeapot","","418 I'm a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",102],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",102],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",102],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",102],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",102],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",102],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",102],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",102],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",102],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",102],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",102],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",102],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",102],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",102],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",102],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",102],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",102],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",102],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",102],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",102],[4,"StatusClass","","The class of an HTTP `status-code`."],[13,"Informational","","1xx (Informational): The request was received, continuing process",103],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",103],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",103],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",103],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",103],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",103],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",102],[11,"class","","Determine the class of a status code, based on its first digit.",102],[11,"is_informational","","Check if class is Informational.",102],[11,"is_success","","Check if class is Success.",102],[11,"is_redirection","","Check if class is Redirection.",102],[11,"is_client_error","","Check if class is ClientError.",102],[11,"is_server_error","","Check if class is ServerError.",102],[11,"is_strange_status","","Check if class is NoClass",102],[11,"fmt","","",102],[11,"fmt","","",102],[11,"eq","","",102],[11,"clone","","",102],[11,"from_i64","","",102],[11,"from_u64","","",102],[11,"partial_cmp","","",102],[11,"cmp","","",102],[11,"to_i64","","",102],[11,"to_u64","","",102],[11,"cmp","","",103],[11,"partial_cmp","","",103],[11,"lt","","",103],[11,"le","","",103],[11,"gt","","",103],[11,"ge","","",103],[11,"eq","","",103],[11,"ne","","",103],[11,"clone","","",103],[11,"default_code","","Get the default status code for the class.",103],[11,"to_i64","","",103],[11,"to_u64","","",103],[0,"uri","hyper","HTTP RequestUris"],[4,"RequestUri","hyper::uri","The Request-URI of a Request's StartLine."],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",104],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",104],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",104],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",104],[11,"clone","","",104],[11,"eq","","",104],[11,"ne","","",104],[11,"fmt","","",104],[6,"Err","",""],[11,"from_str","","",104],[0,"version","hyper","HTTP Versions enum"],[4,"HttpVersion","hyper::version","Represents a version of the HTTP spec."],[13,"Http09","","`HTTP/0.9`",105],[13,"Http10","","`HTTP/1.0`",105],[13,"Http11","","`HTTP/1.1`",105],[13,"Http20","","`HTTP/2.0`",105],[11,"fmt","","",105],[11,"partial_cmp","","",105],[11,"lt","","",105],[11,"le","","",105],[11,"gt","","",105],[11,"ge","","",105],[11,"eq","","",105],[11,"ne","","",105],[11,"fmt","","",105],[14,"bench_header!","hyper",""],[14,"deref!","",""],[14,"impl_list_header!","",""],[14,"impl_header!","",""]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Url"],[3,"EncodingOverride"],[4,"Host"],[3,"Ipv6Address"],[4,"ParseError"],[4,"Context"],[3,"CharRanges"],[3,"PathFormatter"],[3,"UserInfoFormatter"],[3,"UrlNoFragmentFormatter"],[4,"SchemeData"],[3,"RelativeSchemeData"],[3,"UrlParser"],[4,"SchemeType"],[3,"Path"],[3,"Path"],[3,"Path"],[3,"PathBuf"],[4,"Body"],[4,"RedirectPolicy"],[3,"Request"],[3,"Response"],[8,"IntoBody"],[8,"IntoUrl"],[3,"Client"],[3,"RequestBuilder"],[4,"HttpError"],[4,"Method"],[3,"EntityTag"],[3,"QualityItem"],[3,"Basic"],[3,"Host"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"Pragma"],[4,"Protocol"],[4,"Vary"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"Accept"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"Allow"],[3,"Authorization"],[3,"String"],[3,"CacheControl"],[3,"Cookie"],[3,"Connection"],[3,"ContentLength"],[3,"ContentType"],[3,"Date"],[3,"Etag"],[3,"Expires"],[3,"LastModified"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"Location"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"UserAgent"],[3,"Quality"],[8,"Scheme"],[8,"Header"],[8,"HeaderFormat"],[3,"Box"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"HeaderFormatter"],[3,"Incoming"],[4,"HttpReader"],[4,"HttpWriter"],[3,"RawStatus"],[4,"HttpListener"],[4,"HttpStream"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[3,"NetworkConnections"],[3,"HttpConnector"],[3,"Listening"],[3,"Request"],[3,"Response"],[8,"Handler"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"]]};
searchIndex['cookie'] = {"items":[[0,"","cookie",""],[3,"CookieJar","","A jar of cookies for managing a session"],[3,"Cookie","",""],[12,"name","","",0],[12,"value","","",0],[12,"expires","","",0],[12,"max_age","","",0],[12,"domain","","",0],[12,"path","","",0],[12,"secure","","",0],[12,"httponly","","",0],[12,"custom","","",0],[3,"AttrVal","",""],[11,"new","","Creates a new empty cookie jar with the given signing key.",1],[11,"add_original","","Adds an original cookie from a request.",1],[11,"add","","Adds a new cookie to this cookie jar.",1],[11,"remove","","Removes a cookie from this cookie jar.",1],[11,"find","","Finds a cookie inside of this cookie jar.",1],[11,"signed","","Creates a child signed cookie jar.",1],[11,"encrypted","","Creates a child encrypted cookie jar.",1],[11,"permanent","","Creates a child jar for permanent cookie storage.",1],[11,"delta","","Calculates the changes that have occurred to this cookie jar over time,\nreturning a vector of `Set-Cookie` headers.",1],[11,"iter","","Return an iterator over the cookies in this jar.",1],[11,"fmt","","",0],[11,"clone","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"new","","",0],[11,"parse","","",0],[11,"pair","","",0],[11,"fmt","","",2],[11,"fmt","","",0],[6,"Err","",""],[11,"from_str","","",0]],"paths":[[3,"Cookie"],[3,"CookieJar"],[3,"AttrVal"]]};
searchIndex['url'] = {"items":[[0,"","url","<a href=\"https://github.com/servo/rust-url\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"../github.png\" alt=\"Fork me on GitHub\"></a>\n<style>.sidebar { margin-top: 53px }</style>"],[3,"Ipv6Address","","A 128 bit IPv6 address"],[12,"pieces","","",0],[3,"Url","","The parsed representation of an absolute URL."],[12,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",1],[12,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",1],[12,"query","","The query string of the URL.",1],[12,"fragment","","The fragment identifier of the URL.",1],[3,"RelativeSchemeData","","Components for URLs in a *relative* scheme such as HTTP."],[12,"username","","The username of the URL, as a possibly empty, pecent-encoded string.",2],[12,"password","","The password of the URL.",2],[12,"host","","The host of the URL, either a domain name or an IPv4 address",2],[12,"port","","The port number of the URL.\n`None` for file-like schemes, or to indicate the default port number.",2],[12,"default_port","","The default port number for the URL’s scheme.\n`None` for file-like schemes.",2],[12,"path","","The path of the URL, as vector of pecent-encoded strings.",2],[3,"UrlParser","","A set of optional parameters for URL parsing."],[4,"Host","","The host name of an URL."],[13,"Domain","","A (DNS) domain name or an IPv4 address.",3],[13,"Ipv6","","An IPv6 address, represented inside `[...]` square brackets\nso that `:` colon characters in the address are not ambiguous\nwith the port number delimiter.",3],[4,"ParseError","","Errors that can occur during parsing."],[13,"EmptyHost","","",4],[13,"InvalidScheme","","",4],[13,"InvalidPort","","",4],[13,"InvalidIpv6Address","","",4],[13,"InvalidDomainCharacter","","",4],[13,"InvalidCharacter","","",4],[13,"InvalidBackslash","","",4],[13,"InvalidPercentEncoded","","",4],[13,"InvalidAtSymbolInUser","","",4],[13,"ExpectedTwoSlashes","","",4],[13,"ExpectedInitialSlash","","",4],[13,"NonUrlCodePoint","","",4],[13,"RelativeUrlWithScheme","","",4],[13,"RelativeUrlWithoutBase","","",4],[13,"RelativeUrlWithNonRelativeBase","","",4],[13,"NonAsciiDomainsNotSupportedYet","","",4],[13,"CannotSetJavascriptFragment","","",4],[13,"CannotSetPortWithFileLikeScheme","","",4],[13,"CannotSetUsernameWithNonRelativeScheme","","",4],[13,"CannotSetPasswordWithNonRelativeScheme","","",4],[13,"CannotSetHostPortWithNonRelativeScheme","","",4],[13,"CannotSetHostWithNonRelativeScheme","","",4],[13,"CannotSetPortWithNonRelativeScheme","","",4],[13,"CannotSetPathWithNonRelativeScheme","","",4],[4,"SchemeData","","The components of the URL whose representation depends on where the scheme is *relative*."],[13,"Relative","","Components for URLs in a *relative* scheme such as HTTP.",5],[13,"NonRelative","","No further structure is assumed for *non-relative* schemes such as `data` and `mailto`.",5],[4,"SchemeType","","Determines the behavior of the URL parser for a given scheme."],[13,"NonRelative","","Indicate that the scheme is *non-relative*.",6],[13,"Relative","","Indicate that the scheme is *relative*, and what the default port number is.",6],[13,"FileLike","","Indicate a *relative* scheme similar to the *file* scheme.",6],[5,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier."],[5,"whatwg_scheme_type_mapper","","http://url.spec.whatwg.org/#relative-scheme"],[11,"fmt","","",3],[11,"clone","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"fmt","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",3],[11,"serialize","","Serialize the host as a string.",3],[11,"fmt","","",3],[11,"parse","","Parse an IPv6 address, without the [] square brackets.",0],[11,"serialize","","Serialize the IPv6 address to a string.",0],[11,"fmt","","",0],[11,"fmt","","",4],[11,"clone","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"description","","",4],[11,"fmt","","",4],[0,"urlutils","","These methods are not meant for use in Rust code,\nonly to help implement the JavaScript URLUtils API: http://url.spec.whatwg.org/#urlutils"],[3,"UrlUtilsWrapper","url::urlutils",""],[12,"url","","",7],[12,"parser","","",7],[0,"percent_encoding","url",""],[3,"EncodeSet","url::percent_encoding","Represents a set of characters / bytes that should be percent-encoded."],[5,"percent_encode_to","","Percent-encode the given bytes, and push the result to `output`."],[5,"percent_encode","","Percent-encode the given bytes."],[5,"utf8_percent_encode_to","","Percent-encode the UTF-8 encoding of the given string, and push the result to `output`."],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string."],[5,"percent_decode_to","","Percent-decode the given bytes, and push the result to `output`."],[5,"percent_decode","","Percent-decode the given bytes."],[5,"lossy_utf8_percent_decode","","Percent-decode the given bytes, and decode the result as UTF-8."],[5,"from_hex","",""],[7,"SIMPLE_ENCODE_SET","","This encode set is used for fragment identifier and non-relative scheme data."],[7,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings."],[7,"DEFAULT_ENCODE_SET","","This encode set is used for path components."],[7,"USERINFO_ENCODE_SET","","This encode set is used in the URL parser for usernames and passwords."],[7,"PASSWORD_ENCODE_SET","","This encode set should be used when setting the password field of a parsed URL."],[7,"USERNAME_ENCODE_SET","","This encode set should be used when setting the username field of a parsed URL."],[7,"FORM_URLENCODED_ENCODE_SET","","This encode set is used in `application/x-www-form-urlencoded` serialization."],[0,"form_urlencoded","url","Parser and serializer for the [`application/x-www-form-urlencoded` format](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms."],[5,"parse","url::form_urlencoded","Convert a byte string in the `application/x-www-form-urlencoded` format\ninto a vector of (name, value) pairs."],[5,"serialize_owned","","Convert a slice of owned (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format."],[5,"serialize","","Convert an iterator of (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format."],[0,"punycode","url","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation."],[5,"decode_to_string","url::punycode","Convert Punycode to an Unicode `String`."],[5,"decode","","Convert Punycode to Unicode."],[5,"encode_str","","Convert an Unicode `str` to Punycode."],[5,"encode","","Convert Unicode to Punycode."],[0,"format","url","Formatting utilities for URLs."],[3,"PathFormatter","url::format","Formatter and serializer for URL path data."],[12,"path","","The path as a slice of string-like objects (String or &str).",8],[3,"UserInfoFormatter","","Formatter and serializer for URL username and password data."],[12,"username","","URL username as a string slice.",9],[12,"password","","URL password as an optional string slice.",9],[3,"UrlNoFragmentFormatter","","Formatter for URLs which ignores the fragment field."],[12,"url","","",10],[11,"fmt","","",8],[11,"fmt","","",9],[11,"fmt","","",10],[6,"ErrorHandler","url","This is called on non-fatal parse errors."],[6,"ParseResult","",""],[8,"ToUrlPath","",""],[10,"to_url_path","","",11],[8,"FromUrlPath","",""],[10,"from_url_path","","",12],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"fmt","","",5],[11,"clone","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"hash","","",1],[11,"new","","Return a new UrlParser with default parameters.",13],[11,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",13],[11,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",13],[11,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",13],[11,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",13],[11,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",13],[11,"fmt","","",6],[11,"eq","","",6],[11,"ne","","",6],[11,"default_port","","",6],[11,"same_as","","",6],[11,"parse","","Parse an URL with the default `UrlParser` parameters.",1],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",1],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",1],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",1],[11,"serialize","","Return the serialization of this URL as a string.",1],[11,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",1],[11,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",1],[11,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",1],[11,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",1],[11,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",1],[11,"username","","If the URL is in a *relative scheme*, return its username.",1],[11,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",1],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",1],[11,"password","","If the URL is in a *relative scheme*, return its password, if any.",1],[11,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",1],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",1],[11,"serialize_userinfo","","Serialize the URL's username and password, if any.",1],[11,"host","","If the URL is in a *relative scheme*, return its structured host.",1],[11,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",1],[11,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",1],[11,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",1],[11,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",1],[11,"port","","If the URL is in a *relative scheme* and has a port number, return it.",1],[11,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",1],[11,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",1],[11,"path","","If the URL is in a *relative scheme*, return its path components.",1],[11,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",1],[11,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",1],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",1],[11,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",1],[11,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",1],[11,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",1],[11,"encode","","",1],[11,"decode","","",1],[11,"fmt","","",1],[11,"fmt","","",5],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username.",2],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",2],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",2],[11,"domain","","If the host is a domain, return the domain as a string.",2],[11,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",2],[11,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",2],[11,"serialize_path","","Serialize the path as a string.",2],[11,"serialize_userinfo","","Serialize the userinfo as a string.",2],[11,"fmt","","",2],[11,"to_url_path","std::path","",14],[11,"to_url_path","std::old_path::posix","",15],[11,"to_url_path","std::old_path::windows","",16],[11,"from_url_path","std::path","",17],[11,"from_url_path","std::old_path::posix","",15],[11,"from_url_path","std::old_path::windows","",16]],"paths":[[3,"Ipv6Address"],[3,"Url"],[3,"RelativeSchemeData"],[4,"Host"],[4,"ParseError"],[4,"SchemeData"],[4,"SchemeType"],[3,"UrlUtilsWrapper"],[3,"PathFormatter"],[3,"UserInfoFormatter"],[3,"UrlNoFragmentFormatter"],[8,"ToUrlPath"],[8,"FromUrlPath"],[3,"UrlParser"],[3,"Path"],[3,"Path"],[3,"Path"],[3,"PathBuf"]]};
searchIndex['rustc-serialize'] = {"items":[[0,"","rustc-serialize","Support code for encoding and decoding types."],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","core::marker","",5],[11,"decode","","",5],[11,"encode","std::path","",6],[11,"encode","","",7],[11,"decode","","",7],[11,"encode","core::cell","",8],[11,"decode","","",8],[11,"encode","","",9],[11,"decode","","",9],[11,"encode","alloc::arc","",10],[11,"decode","","",10],[11,"encode","collections::linked_list","",11],[11,"decode","","",11],[11,"encode","collections::vec_deque","",12],[11,"decode","","",12],[11,"encode","collections::btree::map","",13],[11,"decode","","",13],[11,"encode","collections::btree::set","",14],[11,"decode","","",14],[11,"encode","std::collections::hash::map","",15],[11,"decode","","",15],[11,"encode","std::collections::hash::set","",16],[11,"decode","","",16],[0,"base64","rustc-serialize","Base64 binary-to-text encoding"],[3,"Config","rustc-serialize::base64","Contains configuration parameters for `to_base64`."],[12,"char_set","","Character set to use",17],[12,"newline","","Newline to use",17],[12,"pad","","True to pad output with `=` characters",17],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",17],[4,"CharacterSet","","Available encoding character sets"],[13,"Standard","","The standard character set (uses `+` and `/`)",18],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",18],[4,"Newline","","Available newline types"],[13,"LF","","A linefeed (i.e. Unix-style newline)",19],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",19],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string"],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",20],[13,"InvalidBase64Length","","The input had an invalid length",20],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding"],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding"],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding"],[8,"ToBase64","","A trait for converting a value to base64 encoding."],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",21],[8,"FromBase64","","A trait for converting from base64 encoded values."],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",22],[11,"fmt","","",20],[11,"description","","",20],[11,"fmt","","",20],[0,"hex","rustc-serialize","Hex binary-to-text encoding"],[4,"FromHexError","rustc-serialize::hex","Errors that can occur when decoding a hex encoded string"],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",23],[13,"InvalidHexLength","","The input had an invalid length",23],[8,"ToHex","","A trait for converting a value to hexadecimal encoding"],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",24],[8,"FromHex","","A trait for converting hexadecimal encoded values"],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",25],[11,"fmt","","",23],[11,"description","","",23],[11,"fmt","","",23],[0,"json","rustc-serialize","JSON parsing and serialization"],[3,"PrettyJson","rustc-serialize::json",""],[3,"AsJson","",""],[3,"AsPrettyJson","",""],[3,"Encoder","","A structure for implementing serialization to JSON."],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x"],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char."],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure."],[3,"Decoder","","A structure to decode JSON to values in rust."],[4,"Json","","Represents a json value"],[13,"I64","","",26],[13,"U64","","",26],[13,"F64","","",26],[13,"String","","",26],[13,"Boolean","","",26],[13,"Array","","",26],[13,"Object","","",26],[13,"Null","","",26],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream."],[13,"InvalidSyntax","","",27],[13,"InvalidNumber","","",27],[13,"EOFWhileParsingObject","","",27],[13,"EOFWhileParsingArray","","",27],[13,"EOFWhileParsingValue","","",27],[13,"EOFWhileParsingString","","",27],[13,"KeyMustBeAString","","",27],[13,"ExpectedColon","","",27],[13,"TrailingCharacters","","",27],[13,"TrailingComma","","",27],[13,"InvalidEscape","","",27],[13,"InvalidUnicodeCodePoint","","",27],[13,"LoneLeadingSurrogateInHexEscape","","",27],[13,"UnexpectedEndOfHexEscape","","",27],[13,"UnrecognizedHex","","",27],[13,"NotFourDigit","","",27],[13,"NotUtf8","","",27],[4,"ParserError","",""],[13,"SyntaxError","","msg, line, col",28],[13,"IoError","","",28],[4,"DecoderError","",""],[13,"ParseError","","",29],[13,"ExpectedError","","",29],[13,"MissingFieldError","","",29],[13,"UnknownVariantError","","",29],[13,"ApplicationError","","",29],[13,"EOF","","",29],[4,"EncoderError","",""],[13,"FmtError","","",30],[13,"BadHashmapKey","","",30],[4,"JsonEvent","","The output of the streaming parser."],[13,"ObjectStart","","",31],[13,"ObjectEnd","","",31],[13,"ArrayStart","","",31],[13,"ArrayEnd","","",31],[13,"BooleanValue","","",31],[13,"I64Value","","",31],[13,"U64Value","","",31],[13,"F64Value","","",31],[13,"StringValue","","",31],[13,"NullValue","","",31],[13,"Error","","",31],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x"],[13,"Index","","",32],[13,"Key","","",32],[5,"error_str","","Returns a readable error string for a given error code."],[5,"decode","","Shortcut function to decode a JSON `&str` into an object"],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`"],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[6,"Array","",""],[6,"Object","",""],[6,"BuilderError","",""],[6,"EncodeResult","",""],[6,"DecodeResult","",""],[8,"ToJson","","A trait for converting values to JSON"],[10,"to_json","","Converts the value of `self` to an instance of JSON",33],[11,"fmt","","",26],[11,"partial_cmp","","",26],[11,"lt","","",26],[11,"le","","",26],[11,"gt","","",26],[11,"ge","","",26],[11,"eq","","",26],[11,"ne","","",26],[11,"clone","","",26],[11,"eq","","",27],[11,"ne","","",27],[11,"clone","","",27],[11,"fmt","","",28],[11,"eq","","",28],[11,"ne","","",28],[11,"clone","","",28],[11,"fmt","","",29],[11,"eq","","",29],[11,"ne","","",29],[11,"clone","","",29],[11,"fmt","","",30],[11,"fmt","","",27],[11,"description","","",29],[11,"cause","","",29],[11,"fmt","","",29],[11,"description","","",28],[11,"fmt","","",28],[11,"description","","",30],[11,"fmt","","",30],[11,"from_error","","",30],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",34],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",34],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",34],[6,"Error","",""],[11,"emit_nil","","",34],[11,"emit_usize","","",34],[11,"emit_u64","","",34],[11,"emit_u32","","",34],[11,"emit_u16","","",34],[11,"emit_u8","","",34],[11,"emit_isize","","",34],[11,"emit_i64","","",34],[11,"emit_i32","","",34],[11,"emit_i16","","",34],[11,"emit_i8","","",34],[11,"emit_bool","","",34],[11,"emit_f64","","",34],[11,"emit_f32","","",34],[11,"emit_char","","",34],[11,"emit_str","","",34],[11,"emit_enum","","",34],[11,"emit_enum_variant","","",34],[11,"emit_enum_variant_arg","","",34],[11,"emit_enum_struct_variant","","",34],[11,"emit_enum_struct_variant_field","","",34],[11,"emit_struct","","",34],[11,"emit_struct_field","","",34],[11,"emit_tuple","","",34],[11,"emit_tuple_arg","","",34],[11,"emit_tuple_struct","","",34],[11,"emit_tuple_struct_arg","","",34],[11,"emit_option","","",34],[11,"emit_option_none","","",34],[11,"emit_option_some","","",34],[11,"emit_seq","","",34],[11,"emit_seq_elt","","",34],[11,"emit_map","","",34],[11,"emit_map_elt_key","","",34],[11,"emit_map_elt_val","","",34],[11,"encode","","",26],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",26],[11,"from_str","","Decodes a json value from a string",26],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",26],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",26],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",26],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",26],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",26],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",26],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",26],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",26],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",26],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",26],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",26],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",26],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",26],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",26],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",26],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",26],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",26],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",26],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",26],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",26],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",26],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",26],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",26],[6,"Output","",""],[11,"index","","",26],[6,"Output","",""],[11,"index","","",26],[11,"fmt","","",31],[11,"clone","","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"fmt","","",32],[11,"clone","","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"new","","",35],[11,"len","","Returns The number of elements in the Stack.",35],[11,"is_empty","","Returns true if the stack is empty.",35],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",35],[11,"is_equal_to","","Compares this stack with an array of StackElements.",35],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",35],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",35],[11,"top","","Returns the top-most element (if any).",35],[6,"Item","",""],[11,"next","","",36],[11,"new","","Creates the JSON parser.",36],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",36],[11,"new","","Create a JSON Builder.",37],[11,"build","","",37],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",38],[6,"Error","",""],[11,"read_nil","","",38],[11,"read_usize","","",38],[11,"read_u8","","",38],[11,"read_u16","","",38],[11,"read_u32","","",38],[11,"read_u64","","",38],[11,"read_isize","","",38],[11,"read_i8","","",38],[11,"read_i16","","",38],[11,"read_i32","","",38],[11,"read_i64","","",38],[11,"read_f32","","",38],[11,"read_f64","","",38],[11,"read_bool","","",38],[11,"read_char","","",38],[11,"read_str","","",38],[11,"read_enum","","",38],[11,"read_enum_variant","","",38],[11,"read_enum_variant_arg","","",38],[11,"read_enum_struct_variant","","",38],[11,"read_enum_struct_variant_field","","",38],[11,"read_struct","","",38],[11,"read_struct_field","","",38],[11,"read_tuple","","",38],[11,"read_tuple_arg","","",38],[11,"read_tuple_struct","","",38],[11,"read_tuple_struct_arg","","",38],[11,"read_option","","",38],[11,"read_seq","","",38],[11,"read_seq_elt","","",38],[11,"read_map","","",38],[11,"read_map_elt_key","","",38],[11,"read_map_elt_val","","",38],[11,"error","","",38],[11,"to_json","","",26],[11,"to_json","collections::string","",0],[11,"to_json","collections::vec","",3],[11,"to_json","collections::btree::map","",13],[11,"to_json","std::collections::hash::map","",15],[11,"to_json","core::option","",4],[11,"fmt","rustc-serialize::json","Encodes a json value into a string",26],[11,"fmt","","Encodes a json value into a string",39],[11,"fmt","","Encodes a json value into a string",40],[11,"indent","","Set the indentation level for the emitted JSON",41],[11,"fmt","","Encodes a json value into a string",41],[6,"Err","",""],[11,"from_str","","",26],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","core::marker","",5],[11,"decode","","",5],[11,"encode","std::path","",6],[11,"encode","","",7],[11,"decode","","",7],[11,"encode","core::cell","",8],[11,"decode","","",8],[11,"encode","","",9],[11,"decode","","",9],[11,"encode","alloc::arc","",10],[11,"decode","","",10],[8,"Decoder","rustc-serialize",""],[16,"Error","rustc-serialize::Decoder",""],[10,"read_nil","rustc-serialize","",42],[10,"read_usize","","",42],[10,"read_u64","","",42],[10,"read_u32","","",42],[10,"read_u16","","",42],[10,"read_u8","","",42],[10,"read_isize","","",42],[10,"read_i64","","",42],[10,"read_i32","","",42],[10,"read_i16","","",42],[10,"read_i8","","",42],[10,"read_bool","","",42],[10,"read_f64","","",42],[10,"read_f32","","",42],[10,"read_char","","",42],[10,"read_str","","",42],[10,"read_enum","","",42],[10,"read_enum_variant","","",42],[10,"read_enum_variant_arg","","",42],[10,"read_enum_struct_variant","","",42],[10,"read_enum_struct_variant_field","","",42],[10,"read_struct","","",42],[10,"read_struct_field","","",42],[10,"read_tuple","","",42],[10,"read_tuple_arg","","",42],[10,"read_tuple_struct","","",42],[10,"read_tuple_struct_arg","","",42],[10,"read_option","","",42],[10,"read_seq","","",42],[10,"read_seq_elt","","",42],[10,"read_map","","",42],[10,"read_map_elt_key","","",42],[10,"read_map_elt_val","","",42],[10,"error","","",42],[8,"Encoder","",""],[16,"Error","rustc-serialize::Encoder",""],[10,"emit_nil","rustc-serialize","",43],[10,"emit_usize","","",43],[10,"emit_u64","","",43],[10,"emit_u32","","",43],[10,"emit_u16","","",43],[10,"emit_u8","","",43],[10,"emit_isize","","",43],[10,"emit_i64","","",43],[10,"emit_i32","","",43],[10,"emit_i16","","",43],[10,"emit_i8","","",43],[10,"emit_bool","","",43],[10,"emit_f64","","",43],[10,"emit_f32","","",43],[10,"emit_char","","",43],[10,"emit_str","","",43],[10,"emit_enum","","",43],[10,"emit_enum_variant","","",43],[10,"emit_enum_variant_arg","","",43],[10,"emit_enum_struct_variant","","",43],[10,"emit_enum_struct_variant_field","","",43],[10,"emit_struct","","",43],[10,"emit_struct_field","","",43],[10,"emit_tuple","","",43],[10,"emit_tuple_arg","","",43],[10,"emit_tuple_struct","","",43],[10,"emit_tuple_struct_arg","","",43],[10,"emit_option","","",43],[10,"emit_option_none","","",43],[10,"emit_option_some","","",43],[10,"emit_seq","","",43],[10,"emit_seq_elt","","",43],[10,"emit_map","","",43],[10,"emit_map_elt_key","","",43],[10,"emit_map_elt_val","","",43],[8,"Decodable","",""],[10,"decode","","",44],[8,"Encodable","",""],[10,"encode","","",45],[8,"DecoderHelpers","",""],[10,"read_to_vec","","",46],[8,"EncoderHelpers","",""],[10,"emit_from_vec","","",47]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['openssl'] = {"items":[[0,"","openssl",""],[0,"asn1","",""],[3,"Asn1Time","openssl::asn1",""],[11,"new","","Wraps existing ASN1_TIME and takes ownership",0],[11,"days_from_now","","Creates a new time on specified interval in days from now",0],[11,"get_handle","","Returns raw handle",0],[11,"drop","","",0],[0,"bn","openssl",""],[3,"BigNum","openssl::bn",""],[4,"RNGProperty","",""],[13,"MsbMaybeZero","","",1],[13,"MsbOne","","",1],[13,"TwoMsbOne","","",1],[0,"unchecked","",""],[6,"Output","openssl::bn::unchecked",""],[6,"Output","",""],[6,"Output","",""],[6,"Output","",""],[6,"Output","",""],[6,"Output","",""],[6,"Output","",""],[11,"clone","openssl::bn","",2],[6,"Output","openssl::bn::unchecked",""],[11,"neg","openssl::bn","",2],[11,"new","","",2],[11,"new_from","","",2],[11,"from_dec_str","","",2],[11,"from_hex_str","","",2],[11,"new_from_slice","","",2],[11,"checked_sqr","","",2],[11,"checked_nnmod","","",2],[11,"checked_mod_add","","",2],[11,"checked_mod_sub","","",2],[11,"checked_mod_mul","","",2],[11,"checked_mod_sqr","","",2],[11,"checked_exp","","",2],[11,"checked_mod_exp","","",2],[11,"checked_mod_inv","","",2],[11,"add_word","","",2],[11,"sub_word","","",2],[11,"mul_word","","",2],[11,"div_word","","",2],[11,"mod_word","","",2],[11,"checked_gcd","","",2],[11,"checked_generate_prime","","",2],[11,"is_prime","","",2],[11,"is_prime_fast","","",2],[11,"checked_new_random","","",2],[11,"checked_new_pseudo_random","","",2],[11,"checked_rand_in_range","","",2],[11,"checked_pseudo_rand_in_range","","",2],[11,"set_bit","","",2],[11,"clear_bit","","",2],[11,"is_bit_set","","",2],[11,"mask_bits","","",2],[11,"checked_shl1","","",2],[11,"checked_shr1","","",2],[11,"checked_add","","",2],[11,"checked_sub","","",2],[11,"checked_mul","","",2],[11,"checked_div","","",2],[11,"checked_mod","","",2],[11,"checked_shl","","",2],[11,"checked_shr","","",2],[11,"negate","","",2],[11,"abs_cmp","","",2],[11,"is_negative","","",2],[11,"num_bits","","",2],[11,"num_bytes","","",2],[11,"to_vec","","",2],[11,"to_dec_str","","",2],[11,"to_hex_str","","",2],[11,"fmt","","",2],[11,"eq","","",2],[11,"cmp","","",2],[11,"partial_cmp","","",2],[11,"drop","","",2],[0,"bio","openssl",""],[3,"MemBio","openssl::bio",""],[11,"drop","","",3],[11,"new","","Creates a new owned memory based BIO",3],[11,"borrowed","","Returns a \"borrow\", i.e. it has no ownership",3],[11,"unwrap","","Consumes current bio and returns wrapped value\nNote that data ownership is lost and\nshould be managed manually",3],[11,"get_handle","","Temporarily gets wrapped value",3],[11,"read","","",3],[11,"write","","",3],[11,"flush","","",3],[0,"crypto","openssl",""],[0,"hash","openssl::crypto",""],[3,"Hasher","openssl::crypto::hash","Provides message digest (hash) computation."],[4,"Type","","Message digest (hash) type."],[13,"MD5","","",4],[13,"SHA1","","",4],[13,"SHA224","","",4],[13,"SHA256","","",4],[13,"SHA384","","",4],[13,"SHA512","","",4],[13,"RIPEMD160","","",4],[5,"hash","","Computes the hash of the `data` with the hash `t`."],[11,"md_len","","Returns the length of the message digest.",4],[11,"evp_md","","Internal interface subject to removal.",4],[11,"new","","Creates a new `Hasher` with the specified hash type.",5],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",5],[11,"write","","",5],[11,"flush","","",5],[11,"clone","","",5],[11,"drop","","",5],[0,"hmac","openssl::crypto",""],[3,"HMAC","openssl::crypto::hmac","Provides HMAC computation."],[5,"hmac","","Computes the HMAC of the `data` with the hash `t` and `key`."],[11,"new","","Creates a new `HMAC` with the specified hash type using the `key`.",6],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",6],[11,"write","","",6],[11,"flush","","",6],[11,"clone","","",6],[11,"drop","","",6],[0,"pkcs5","openssl::crypto",""],[5,"pbkdf2_hmac_sha1","openssl::crypto::pkcs5","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm."],[0,"pkey","openssl::crypto",""],[3,"PKey","openssl::crypto::pkey",""],[4,"Role","","Represents a role an asymmetric key might be appropriate for."],[13,"Encrypt","","",7],[13,"Decrypt","","",7],[13,"Sign","","",7],[13,"Verify","","",7],[4,"EncryptionPadding","","Type of encryption padding to use."],[13,"OAEP","","",8],[13,"PKCS1v15","","",8],[11,"new","","",9],[11,"gen","","",9],[11,"save_pub","","Returns a serialized form of the public key, suitable for load_pub().",9],[11,"load_pub","","Loads a serialized form of the public key, as produced by save_pub().",9],[11,"save_priv","","Returns a serialized form of the public and private keys, suitable for\nload_priv().",9],[11,"load_priv","","Loads a serialized form of the public and private keys, as produced by\nsave_priv().",9],[11,"write_pem","","Stores private key as a PEM",9],[11,"size","","Returns the size of the public key modulus.",9],[11,"can","","Returns whether this pkey object can perform the specified role.",9],[11,"max_data","","Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",9],[11,"encrypt_with_padding","","",9],[11,"decrypt_with_padding","","",9],[11,"encrypt","","Encrypts data using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",9],[11,"decrypt","","Decrypts data, expecting OAEP padding, returning the decrypted data.",9],[11,"sign","","Signs data, using OpenSSL's default scheme and sha256. Unlike encrypt(),\ncan process an arbitrary amount of data; returns the signature.",9],[11,"verify","","Verifies a signature s (using OpenSSL's default scheme and sha256) on a\nmessage m. Returns true if the signature is valid, and false otherwise.",9],[11,"sign_with_hash","","",9],[11,"verify_with_hash","","",9],[11,"get_handle","","",9],[11,"drop","","",9],[0,"rand","openssl::crypto",""],[5,"rand_bytes","openssl::crypto::rand",""],[0,"symm","openssl::crypto",""],[3,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context."],[4,"Mode","",""],[13,"Encrypt","","",10],[13,"Decrypt","","",10],[4,"Type","",""],[13,"AES_128_ECB","","",11],[13,"AES_128_CBC","","",11],[13,"AES_256_ECB","","",11],[13,"AES_256_CBC","","",11],[13,"RC4_128","","",11],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data."],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data."],[11,"new","","",12],[11,"pad","","Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",12],[11,"init","","Initializes this crypter.",12],[11,"update","","Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",12],[11,"finalize","","Finish crypting. Returns the remaining partial block of output, if any.",12],[11,"drop","","",12],[0,"memcmp","openssl::crypto",""],[5,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes."],[0,"ssl","openssl",""],[3,"SslContext","openssl::ssl","An SSL context object"],[3,"Ssl","",""],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream."],[4,"SslMethod","","Determines the SSL method supported"],[13,"Sslv23","","Support the SSLv2, SSLv3 and TLSv1 protocols.",13],[13,"Sslv3","","Only support the SSLv3 protocol.",13],[13,"Tlsv1","","Only support the TLSv1 protocol.",13],[4,"SslVerifyMode","","Determines the type of certificate verification used"],[13,"SslVerifyPeer","","Verify that the server's certificate is trusted",14],[13,"SslVerifyNone","","Do not verify the server's certificate",14],[4,"MaybeSslStream","","A utility type to help in cases where the use of SSL is decided at runtime."],[13,"Ssl","","A connection using SSL",15],[13,"Normal","","A connection not using SSL",15],[0,"error","",""],[4,"SslError","openssl::ssl::error","An SSL error"],[13,"StreamError","","The underlying stream reported an error",16],[13,"SslSessionClosed","","The SSL session has been closed by the other end",16],[13,"OpenSslErrors","","An error in the OpenSSL library",16],[4,"OpensslError","","An error from the OpenSSL library"],[13,"UnknownError","","An unknown error",17],[12,"library","openssl::ssl::error::OpensslError","The library reporting the error",17],[12,"function","","The function reporting the error",17],[12,"reason","","The reason for the error",17],[11,"eq","openssl::ssl::error","",16],[11,"ne","","",16],[11,"clone","","",16],[11,"fmt","","",16],[11,"fmt","","",16],[11,"description","","",16],[11,"cause","","",16],[11,"eq","","",17],[11,"ne","","",17],[11,"clone","","",17],[11,"fmt","","",17],[11,"get","","Creates a new `OpenSslErrors` with the current contents of the error\nstack.",16],[11,"from_error","","Creates an `SslError` from the raw numeric error code.",16],[6,"VerifyCallback","openssl::ssl","The signature of functions that can be used to manually verify certificates"],[6,"VerifyCallbackData","","The signature of functions that can be used to manually verify certificates\nwhen user-data should be carried for all verification process"],[11,"eq","","",13],[11,"ne","","",13],[11,"hash","","",13],[11,"fmt","","",13],[11,"clone","","",13],[11,"fmt","","",14],[11,"clone","","",14],[11,"fmt","","",18],[11,"drop","","",18],[11,"new","","Creates a new SSL context.",18],[11,"set_verify","","Configures the certificate verification method for new connections.",18],[11,"set_verify_with_data","","Configures the certificate verification method for new connections also\ncarrying supplied data.",18],[11,"set_verify_depth","","Sets verification depth",18],[11,"set_CA_file","","Specifies the file that contains trusted CA certificates.",18],[11,"set_certificate_file","","Specifies the file that contains certificate",18],[11,"set_private_key_file","","Specifies the file that contains private key",18],[11,"set_cipher_list","","",18],[11,"fmt","","",19],[11,"drop","","",19],[11,"new","","",19],[11,"set_hostname","","Set the host name to be used with SNI (Server Name Indication).",19],[11,"get_peer_certificate","","",19],[11,"clone","","",20],[11,"try_clone","","Create a new independently owned handle to the underlying socket.",20],[11,"fmt","","",20],[11,"new_server_from","","",20],[11,"new_from","","Attempts to create a new SSL stream from a given `Ssl` instance.",20],[11,"new","","Creates a new SSL stream",20],[11,"new_server","","Creates a new SSL server stream",20],[11,"get_inner","","Returns a mutable reference to the underlying stream.",20],[11,"get_ref","","Returns a reference to the underlying stream.",20],[11,"get_mut","","Returns a mutable reference to the underlying stream.",20],[11,"get_compression","","Get the compression currently in use.  The result will be\neither None, indicating no compression is in use, or a string\nwith the compression name.",20],[11,"read","","",20],[11,"write","","",20],[11,"flush","","",20],[11,"fmt","","",15],[11,"read","","",15],[11,"write","","",15],[11,"flush","","",15],[11,"get_ref","","Returns a reference to the underlying stream.",15],[11,"get_mut","","Returns a mutable reference to the underlying stream.",15],[0,"x509","openssl",""],[3,"X509StoreContext","openssl::x509",""],[3,"X509Generator","","Generator of private key/certificate pairs"],[3,"X509","","A public key certificate"],[3,"X509Name","",""],[4,"X509FileType","",""],[13,"PEM","","",21],[13,"ASN1","","",21],[13,"Default","","",21],[4,"KeyUsage","",""],[13,"DigitalSignature","","",22],[13,"NonRepudiation","","",22],[13,"KeyEncipherment","","",22],[13,"DataEncipherment","","",22],[13,"KeyAgreement","","",22],[13,"KeyCertSign","","",22],[13,"CRLSign","","",22],[13,"EncipherOnly","","",22],[13,"DecipherOnly","","",22],[4,"ExtKeyUsage","",""],[13,"ServerAuth","","",23],[13,"ClientAuth","","",23],[13,"CodeSigning","","",23],[13,"EmailProtection","","",23],[13,"TimeStamping","","",23],[13,"MsCodeInd","","",23],[13,"MsCodeCom","","",23],[13,"MsCtlSign","","",23],[13,"MsSgc","","",23],[13,"MsEfs","","",23],[13,"NsSgc","","",23],[4,"X509ValidationError","",""],[13,"X509UnableToGetIssuerCert","","",24],[13,"X509UnableToGetCrl","","",24],[13,"X509UnableToDecryptCertSignature","","",24],[13,"X509UnableToDecryptCrlSignature","","",24],[13,"X509UnableToDecodeIssuerPublicKey","","",24],[13,"X509CertSignatureFailure","","",24],[13,"X509CrlSignatureFailure","","",24],[13,"X509CertNotYetValid","","",24],[13,"X509CertHasExpired","","",24],[13,"X509CrlNotYetValid","","",24],[13,"X509CrlHasExpired","","",24],[13,"X509ErrorInCertNotBeforeField","","",24],[13,"X509ErrorInCertNotAfterField","","",24],[13,"X509ErrorInCrlLastUpdateField","","",24],[13,"X509ErrorInCrlNextUpdateField","","",24],[13,"X509OutOfMem","","",24],[13,"X509DepthZeroSelfSignedCert","","",24],[13,"X509SelfSignedCertInChain","","",24],[13,"X509UnableToGetIssuerCertLocally","","",24],[13,"X509UnableToVerifyLeafSignature","","",24],[13,"X509CertChainTooLong","","",24],[13,"X509CertRevoked","","",24],[13,"X509InvalidCA","","",24],[13,"X509PathLengthExceeded","","",24],[13,"X509InvalidPurpose","","",24],[13,"X509CertUntrusted","","",24],[13,"X509CertRejected","","",24],[13,"X509SubjectIssuerMismatch","","",24],[13,"X509AkidSkidMismatch","","",24],[13,"X509AkidIssuerSerialMismatch","","",24],[13,"X509KeyusageNoCertsign","","",24],[13,"X509UnableToGetCrlIssuer","","",24],[13,"X509UnhandledCriticalExtension","","",24],[13,"X509KeyusageNoCrlSign","","",24],[13,"X509UnhandledCriticalCrlExtension","","",24],[13,"X509InvalidNonCA","","",24],[13,"X509ProxyPathLengthExceeded","","",24],[13,"X509KeyusageNoDigitalSignature","","",24],[13,"X509ProxyCertificatesNotAllowed","","",24],[13,"X509InvalidExtension","","",24],[13,"X509InavlidPolicyExtension","","",24],[13,"X509NoExplicitPolicy","","",24],[13,"X509DifferentCrlScope","","",24],[13,"X509UnsupportedExtensionFeature","","",24],[13,"X509UnnestedResource","","",24],[13,"X509PermittedVolation","","",24],[13,"X509ExcludedViolation","","",24],[13,"X509SubtreeMinmax","","",24],[13,"X509UnsupportedConstraintType","","",24],[13,"X509UnsupportedConstraintSyntax","","",24],[13,"X509UnsupportedNameSyntax","","",24],[13,"X509CrlPathValidationError","","",24],[13,"X509ApplicationVerification","","",24],[13,"X509UnknownError","","",24],[11,"new","","",25],[11,"get_error","","",25],[11,"get_current_cert","","",25],[11,"clone","","",22],[11,"clone","","",23],[11,"new","","Creates a new generator with the following defaults:",26],[11,"set_bitlength","","Sets desired bit length",26],[11,"set_valid_period","","Sets certificate validity period in days since today",26],[11,"set_CN","","Sets Common Name of certificate",26],[11,"set_usage","","Sets what for certificate could be used",26],[11,"set_ext_usage","","Sets allowed extended usage of certificate",26],[11,"set_sign_hash","","",26],[11,"generate","","Generates a private key and a signed certificate and returns them",26],[11,"new","","Creates new from handle with desired ownership.",27],[11,"new_in_ctx","","Creates a new certificate from context. Doesn't take ownership\nof handle.",27],[11,"from_pem","","Reads certificate from PEM, takes ownership of handle",27],[11,"subject_name","","",27],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",27],[11,"write_pem","","Writes certificate as PEM",27],[11,"drop","","",27]],"paths":[[3,"Asn1Time"],[4,"RNGProperty"],[3,"BigNum"],[3,"MemBio"],[4,"Type"],[3,"Hasher"],[3,"HMAC"],[4,"Role"],[4,"EncryptionPadding"],[3,"PKey"],[4,"Mode"],[4,"Type"],[3,"Crypter"],[4,"SslMethod"],[4,"SslVerifyMode"],[4,"MaybeSslStream"],[4,"SslError"],[4,"OpensslError"],[3,"SslContext"],[3,"Ssl"],[3,"SslStream"],[4,"X509FileType"],[4,"KeyUsage"],[4,"ExtKeyUsage"],[4,"X509ValidationError"],[3,"X509StoreContext"],[3,"X509Generator"],[3,"X509"]]};
searchIndex['time'] = {"items":[[0,"","time","Simple time handling."],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds."],[12,"sec","","",0],[12,"nsec","","",0],[3,"PreciseTime","","An opaque structure representing a moment in time."],[3,"SteadyTime","","A structure representing a moment in time."],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value."],[12,"tm_sec","","Seconds after the minute - [0, 60]",1],[12,"tm_min","","Minutes after the hour - [0, 59]",1],[12,"tm_hour","","Hours after midnight - [0, 23]",1],[12,"tm_mday","","Day of the month - [1, 31]",1],[12,"tm_mon","","Months since January - [0, 11]",1],[12,"tm_year","","Years since 1900",1],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1],[12,"tm_yday","","Days since January 1 - [0, 365]",1],[12,"tm_isdst","","Daylight Saving Time flag.",1],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1],[12,"tm_nsec","","Nanoseconds after the second - [0, 10<sup>9</sup> - 1]",1],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display."],[4,"ParseError","",""],[13,"InvalidSecond","","",2],[13,"InvalidMinute","","",2],[13,"InvalidHour","","",2],[13,"InvalidDay","","",2],[13,"InvalidMonth","","",2],[13,"InvalidYear","","",2],[13,"InvalidDayOfWeek","","",2],[13,"InvalidDayOfMonth","","",2],[13,"InvalidDayOfYear","","",2],[13,"InvalidZoneOffset","","",2],[13,"InvalidTime","","",2],[13,"MissingFormatConverter","","",2],[13,"InvalidFormatSpecifier","","",2],[13,"UnexpectedCharacter","","",2],[5,"strptime","","Parses the time from the string according to the format string."],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z."],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch."],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch."],[5,"tzset","",""],[5,"empty_tm","",""],[5,"at_utc","","Returns the specified time in UTC"],[5,"now_utc","","Returns the current time in UTC"],[5,"at","","Returns the specified time in the local timezone"],[5,"now","","Returns the current time in the local timezone"],[5,"strftime","","Formats the time according to the format string."],[11,"fmt","","",3],[11,"fmt","","",0],[11,"cmp","","",0],[11,"partial_cmp","","",0],[11,"lt","","",0],[11,"le","","",0],[11,"gt","","",0],[11,"ge","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"new","","",0],[6,"Output","",""],[11,"add","","",0],[6,"Output","",""],[11,"sub","","",0],[6,"Output","",""],[11,"sub","","",0],[11,"clone","","",4],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",4],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",4],[11,"fmt","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"cmp","","",5],[11,"partial_cmp","","",5],[11,"lt","","",5],[11,"le","","",5],[11,"gt","","",5],[11,"ge","","",5],[11,"clone","","",5],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",5],[11,"fmt","","",5],[6,"Output","",""],[11,"sub","","",5],[6,"Output","",""],[11,"sub","","",5],[6,"Output","",""],[11,"add","","",5],[11,"fmt","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"clone","","",1],[6,"Output","",""],[11,"add","","The resulting Tm is in UTC.",1],[6,"Output","",""],[11,"sub","","The resulting Tm is in UTC.",1],[6,"Output","",""],[11,"sub","","",1],[11,"partial_cmp","","",1],[11,"cmp","","",1],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1],[11,"to_local","","Convert time to the local timezone",1],[11,"to_utc","","Convert time to the UTC",1],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1],[11,"strftime","","Formats the time according to the format string.",1],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1],[11,"fmt","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"fmt","","",2],[11,"fmt","","",3]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex['openssl-sys'] = {"items":[[0,"","openssl-sys",""],[3,"EVP_MD_CTX","",""],[3,"HMAC_CTX","",""],[3,"X509V3_CTX","",""],[3,"BIGNUM","",""],[12,"d","","",0],[12,"top","","",0],[12,"dmax","","",0],[12,"neg","","",0],[12,"flags","","",0],[5,"init","",""],[5,"BIO_eof","",""],[5,"ASN1_INTEGER_set","",""],[5,"ASN1_STRING_type_new","",""],[5,"ASN1_TIME_free","",""],[5,"BIO_ctrl","",""],[5,"BIO_free_all","",""],[5,"BIO_new","",""],[5,"BIO_read","",""],[5,"BIO_write","",""],[5,"BIO_s_mem","",""],[5,"BN_new","",""],[5,"BN_dup","",""],[5,"BN_clear_free","",""],[5,"BN_CTX_new","",""],[5,"BN_CTX_free","",""],[5,"BN_num_bits","",""],[5,"BN_set_negative","",""],[5,"BN_set_word","",""],[5,"BN_add","",""],[5,"BN_div","",""],[5,"BN_exp","",""],[5,"BN_gcd","",""],[5,"BN_mod_add","",""],[5,"BN_mod_exp","",""],[5,"BN_mod_inverse","",""],[5,"BN_mod_mul","",""],[5,"BN_mod_sqr","",""],[5,"BN_mod_sub","",""],[5,"BN_mul","",""],[5,"BN_nnmod","",""],[5,"BN_add_word","",""],[5,"BN_sub_word","",""],[5,"BN_mul_word","",""],[5,"BN_div_word","",""],[5,"BN_mod_word","",""],[5,"BN_sqr","",""],[5,"BN_sub","",""],[5,"BN_clear_bit","",""],[5,"BN_is_bit_set","",""],[5,"BN_lshift","",""],[5,"BN_lshift1","",""],[5,"BN_mask_bits","",""],[5,"BN_rshift","",""],[5,"BN_set_bit","",""],[5,"BN_rshift1","",""],[5,"BN_cmp","",""],[5,"BN_ucmp","",""],[5,"BN_generate_prime_ex","",""],[5,"BN_is_prime_ex","",""],[5,"BN_is_prime_fasttest_ex","",""],[5,"BN_rand","",""],[5,"BN_pseudo_rand","",""],[5,"BN_rand_range","",""],[5,"BN_pseudo_rand_range","",""],[5,"BN_bin2bn","",""],[5,"BN_bn2bin","",""],[5,"BN_dec2bn","",""],[5,"BN_bn2dec","",""],[5,"BN_hex2bn","",""],[5,"BN_bn2hex","",""],[5,"CRYPTO_num_locks","",""],[5,"CRYPTO_set_locking_callback","",""],[5,"CRYPTO_free","",""],[5,"CRYPTO_memcmp","",""],[5,"ERR_get_error","",""],[5,"ERR_lib_error_string","",""],[5,"ERR_func_error_string","",""],[5,"ERR_reason_error_string","",""],[5,"ERR_load_crypto_strings","",""],[5,"EVP_md5","",""],[5,"EVP_ripemd160","",""],[5,"EVP_sha1","",""],[5,"EVP_sha224","",""],[5,"EVP_sha256","",""],[5,"EVP_sha384","",""],[5,"EVP_sha512","",""],[5,"EVP_aes_128_cbc","",""],[5,"EVP_aes_128_ecb","",""],[5,"EVP_aes_256_cbc","",""],[5,"EVP_aes_256_ecb","",""],[5,"EVP_rc4","",""],[5,"EVP_CIPHER_CTX_new","",""],[5,"EVP_CIPHER_CTX_set_padding","",""],[5,"EVP_CIPHER_CTX_free","",""],[5,"EVP_CipherInit","",""],[5,"EVP_CipherUpdate","",""],[5,"EVP_CipherFinal","",""],[5,"EVP_DigestInit","",""],[5,"EVP_DigestInit_ex","",""],[5,"EVP_DigestUpdate","",""],[5,"EVP_DigestFinal","",""],[5,"EVP_DigestFinal_ex","",""],[5,"EVP_MD_CTX_create","",""],[5,"EVP_MD_CTX_copy_ex","",""],[5,"EVP_MD_CTX_destroy","",""],[5,"EVP_PKEY_new","",""],[5,"EVP_PKEY_free","",""],[5,"EVP_PKEY_assign","",""],[5,"EVP_PKEY_get1_RSA","",""],[5,"EVP_PKEY_set1_RSA","",""],[5,"HMAC_CTX_init","",""],[5,"HMAC_CTX_cleanup","",""],[5,"HMAC_CTX_copy","",""],[5,"HMAC_Init_ex_shim","",""],[5,"HMAC_Final_shim","",""],[5,"HMAC_Update_shim","",""],[5,"PEM_read_bio_X509","",""],[5,"PEM_write_bio_PrivateKey","",""],[5,"PEM_write_bio_X509","",""],[5,"PKCS5_PBKDF2_HMAC_SHA1","",""],[5,"RAND_bytes","",""],[5,"RSA_generate_key","",""],[5,"RSA_private_decrypt","",""],[5,"RSA_public_encrypt","",""],[5,"RSA_sign","",""],[5,"RSA_size","",""],[5,"RSA_verify","",""],[5,"SSL_library_init","",""],[5,"SSL_load_error_strings","",""],[5,"SSLv3_method","",""],[5,"TLSv1_method","",""],[5,"SSLv23_method","",""],[5,"SSL_new","",""],[5,"SSL_free","",""],[5,"SSL_set_bio","",""],[5,"SSL_get_rbio","",""],[5,"SSL_get_wbio","",""],[5,"SSL_accept","",""],[5,"SSL_connect","",""],[5,"SSL_ctrl","",""],[5,"SSL_get_error","",""],[5,"SSL_read","",""],[5,"SSL_write","",""],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","",""],[5,"SSL_get_SSL_CTX","",""],[5,"SSL_get_current_compression","",""],[5,"SSL_get_peer_certificate","",""],[5,"SSL_COMP_get_name","",""],[5,"SSL_CTX_new","",""],[5,"SSL_CTX_free","",""],[5,"SSL_CTX_set_verify","",""],[5,"SSL_CTX_set_verify_depth","",""],[5,"SSL_CTX_load_verify_locations","",""],[5,"SSL_CTX_get_ex_new_index","",""],[5,"SSL_CTX_set_ex_data","",""],[5,"SSL_CTX_get_ex_data","",""],[5,"SSL_CTX_use_certificate_file","",""],[5,"SSL_CTX_use_PrivateKey_file","",""],[5,"SSL_CTX_set_cipher_list","",""],[5,"X509_add_ext","",""],[5,"X509_digest","",""],[5,"X509_free","",""],[5,"X509_get_serialNumber","",""],[5,"X509_get_subject_name","",""],[5,"X509_gmtime_adj","",""],[5,"X509_new","",""],[5,"X509_set_issuer_name","",""],[5,"X509_set_notAfter","",""],[5,"X509_set_notBefore","",""],[5,"X509_set_version","",""],[5,"X509_set_pubkey","",""],[5,"X509_sign","",""],[5,"X509_EXTENSION_free","",""],[5,"X509_NAME_add_entry_by_txt","",""],[5,"X509_NAME_get_index_by_NID","",""],[5,"X509_NAME_get_entry","",""],[5,"X509_NAME_ENTRY_get_data","",""],[5,"ASN1_STRING_to_UTF8","",""],[5,"X509_STORE_CTX_get_current_cert","",""],[5,"X509_STORE_CTX_get_error","",""],[5,"X509_STORE_CTX_get_ex_data","",""],[5,"X509V3_EXT_conf_nid","",""],[5,"X509V3_set_ctx","",""],[5,"i2d_RSA_PUBKEY","",""],[5,"d2i_RSA_PUBKEY","",""],[5,"i2d_RSAPrivateKey","",""],[5,"d2i_RSAPrivateKey","",""],[0,"probe","",""],[3,"ProbeResult","openssl-sys::probe",""],[12,"cert_file","","",1],[12,"cert_dir","","",1],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound."],[5,"init_ssl_cert_env_vars","",""],[5,"probe","",""],[6,"ASN1_INTEGER","openssl-sys",""],[6,"ASN1_STRING","",""],[6,"ASN1_TIME","",""],[6,"BIO","",""],[6,"BIO_METHOD","",""],[6,"BN_CTX","",""],[6,"COMP_METHOD","",""],[6,"CRYPTO_EX_DATA","",""],[6,"ENGINE","",""],[6,"EVP_CIPHER","",""],[6,"EVP_CIPHER_CTX","",""],[6,"EVP_MD","",""],[6,"EVP_PKEY","",""],[6,"EVP_PKEY_CTX","",""],[6,"RSA","",""],[6,"SSL","",""],[6,"SSL_CTX","",""],[6,"SSL_METHOD","",""],[6,"X509","",""],[6,"X509_CRL","",""],[6,"X509_EXTENSION","",""],[6,"X509_NAME","",""],[6,"X509_NAME_ENTRY","",""],[6,"X509_REQ","",""],[6,"X509_STORE_CTX","",""],[6,"CRYPTO_EX_new","",""],[6,"CRYPTO_EX_dup","",""],[6,"CRYPTO_EX_free","",""],[6,"PasswordCallback","",""],[17,"BIO_CTRL_EOF","",""],[17,"CRYPTO_LOCK","",""],[17,"MBSTRING_ASC","",""],[17,"MBSTRING_BMP","",""],[17,"MBSTRING_FLAG","",""],[17,"MBSTRING_UNIV","",""],[17,"MBSTRING_UTF8","",""],[17,"NID_ext_key_usage","",""],[17,"NID_key_usage","",""],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","",""],[17,"SSL_ERROR_NONE","",""],[17,"SSL_ERROR_SSL","",""],[17,"SSL_ERROR_SYSCALL","",""],[17,"SSL_ERROR_WANT_ACCEPT","",""],[17,"SSL_ERROR_WANT_CONNECT","",""],[17,"SSL_ERROR_WANT_READ","",""],[17,"SSL_ERROR_WANT_WRITE","",""],[17,"SSL_ERROR_WANT_X509_LOOKUP","",""],[17,"SSL_ERROR_ZERO_RETURN","",""],[17,"SSL_VERIFY_NONE","",""],[17,"SSL_VERIFY_PEER","",""],[17,"TLSEXT_NAMETYPE_host_name","",""],[17,"V_ASN1_GENERALIZEDTIME","",""],[17,"V_ASN1_UTCTIME","",""],[17,"X509_FILETYPE_ASN1","",""],[17,"X509_FILETYPE_DEFAULT","",""],[17,"X509_FILETYPE_PEM","",""],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","",""],[17,"X509_V_ERR_AKID_SKID_MISMATCH","",""],[17,"X509_V_ERR_APPLICATION_VERIFICATION","",""],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","",""],[17,"X509_V_ERR_CERT_HAS_EXPIRED","",""],[17,"X509_V_ERR_CERT_NOT_YET_VALID","",""],[17,"X509_V_ERR_CERT_REJECTED","",""],[17,"X509_V_ERR_CERT_REVOKED","",""],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","",""],[17,"X509_V_ERR_CERT_UNTRUSTED","",""],[17,"X509_V_ERR_CRL_HAS_EXPIRED","",""],[17,"X509_V_ERR_CRL_NOT_YET_VALID","",""],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","",""],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","",""],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","",""],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","",""],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","",""],[17,"X509_V_ERR_EXCLUDED_VIOLATION","",""],[17,"X509_V_ERR_INVALID_CA","",""],[17,"X509_V_ERR_INVALID_EXTENSION","",""],[17,"X509_V_ERR_INVALID_NON_CA","",""],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","",""],[17,"X509_V_ERR_INVALID_PURPOSE","",""],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","",""],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","",""],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","",""],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","",""],[17,"X509_V_ERR_OUT_OF_MEM","",""],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","",""],[17,"X509_V_ERR_PERMITTED_VIOLATION","",""],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","",""],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","",""],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","",""],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","",""],[17,"X509_V_ERR_SUBTREE_MINMAX","",""],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","",""],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","",""],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","",""],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","",""],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","",""],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","",""],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","",""],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","",""],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","",""],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","",""],[17,"X509_V_ERR_UNNESTED_RESOURCE","",""],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","",""],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","",""],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","",""],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","",""],[17,"X509_V_OK","",""]],"paths":[[3,"BIGNUM"],[3,"ProbeResult"]]};
searchIndex['mime'] = {"items":[[0,"","mime","# Mime"],[3,"Mime","","Mime, or Media Type. Encapsulates common registers types."],[4,"TopLevel","",""],[13,"Star","","",0],[13,"Text","","",0],[13,"Image","","",0],[13,"Audio","","",0],[13,"Video","","",0],[13,"Application","","",0],[13,"Multipart","","",0],[13,"Message","","",0],[13,"Model","","",0],[13,"Ext","","",0],[4,"SubLevel","",""],[13,"Star","","",1],[13,"Plain","","",1],[13,"Html","","",1],[13,"Xml","","",1],[13,"Javascript","","",1],[13,"Css","","",1],[13,"Json","","",1],[13,"WwwFormUrlEncoded","","",1],[13,"FormData","","",1],[13,"Png","","",1],[13,"Gif","","",1],[13,"Bmp","","",1],[13,"Jpeg","","",1],[13,"Ext","","",1],[4,"Attr","",""],[13,"Charset","","",2],[13,"Q","","",2],[13,"Ext","","",2],[4,"Value","",""],[13,"Utf8","","",3],[13,"Ext","","",3],[6,"Param","",""],[11,"fmt","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"clone","","",4],[11,"fmt","","",0],[11,"clone","","",0],[11,"eq","","",0],[11,"fmt","","",0],[6,"Err","",""],[11,"from_str","","",0],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"fmt","","",1],[6,"Err","",""],[11,"from_str","","",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"fmt","","",2],[6,"Err","",""],[11,"from_str","","",2],[11,"fmt","","",3],[11,"clone","","",3],[11,"eq","","",3],[11,"fmt","","",3],[6,"Err","",""],[11,"from_str","","",3],[11,"fmt","","",4],[6,"Err","",""],[11,"from_str","","",4]],"paths":[[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Mime"]]};
searchIndex['httparse'] = {"items":[[0,"","httparse",""],[3,"Request","",""],[12,"method","","",0],[12,"path","","",0],[12,"version","","",0],[12,"headers","","",0],[3,"Response","",""],[12,"version","","",1],[12,"code","","",1],[12,"reason","","",1],[12,"headers","","",1],[3,"Header","",""],[12,"name","","",2],[12,"value","","",2],[4,"Error","",""],[13,"HeaderName","","",3],[13,"HeaderValue","","",3],[13,"NewLine","","",3],[13,"Status","","",3],[13,"Token","","",3],[13,"TooManyHeaders","","",3],[13,"Version","","",3],[4,"Status","",""],[13,"Complete","","",4],[13,"Partial","","",4],[11,"fmt","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"clone","","",3],[11,"fmt","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"clone","","",4],[11,"is_complete","","",4],[11,"is_partial","","",4],[11,"unwrap","","",4],[11,"new","","",0],[11,"parse","","",0],[11,"new","","",1],[11,"parse","","",1],[11,"fmt","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"clone","","",2]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"]]};
searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade."],[3,"LogRecord","","The \"payload\" of a log message."],[3,"LogLocation","","The location of a log message."],[12,"module_path","","The module path of the message.",0],[12,"file","","The source file containing the message.",0],[12,"line","","The line containing the message.",0],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter."],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called."],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework"],[13,"Error","","The \"error\" level.",1],[13,"Warn","","The \"warn\" level.",1],[13,"Info","","The \"info\" level.",1],[13,"Debug","","The \"debug\" level.",1],[13,"Trace","","The \"trace\" level.",1],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework."],[13,"Off","","A level lower than all log levels.",2],[13,"Error","","Corresponds to the `Error` log level.",2],[13,"Warn","","Corresponds to the `Warn` log level.",2],[13,"Info","","Corresponds to the `Trace` log level.",2],[13,"Debug","","Corresponds to the `Debug` log level.",2],[13,"Trace","","Corresponds to the `Trace` log level.",2],[5,"max_log_level","","Returns the current maximum log level."],[5,"set_logger","","Sets the global logger."],[5,"enabled","","Determines if the current logger will ignore a log message at the specified\nlevel from the specified module."],[5,"log","","Logs a message."],[8,"Log","","A trait encapsulating the operations required of a logger"],[10,"enabled","","Determines if a log message sent at the specified level from the\nspecified module would be logged.",3],[10,"log","","Logs the `LogRecord`.",3],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"eq","","",1],[11,"partial_cmp","","",1],[11,"partial_cmp","","",1],[11,"cmp","","",1],[6,"Err","",""],[11,"from_str","","",1],[11,"fmt","","",1],[11,"max","","Returns the most verbose logging level.",1],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"eq","","",2],[11,"partial_cmp","","",2],[11,"partial_cmp","","",2],[11,"cmp","","",2],[6,"Err","",""],[11,"from_str","","",2],[11,"fmt","","",2],[11,"max","","Returns the most verbose logging level filter.",2],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",2],[11,"new","","Creates a new `LogRecord`.",4],[11,"args","","The message body.",4],[11,"location","","The location of the log directive.",4],[11,"level","","The verbosity level of the message.",4],[11,"fmt","","",0],[11,"clone","","",0],[11,"fmt","","",5],[11,"get","","Gets the current maximum log level filter.",5],[11,"set","","Sets the maximum log level.",5],[11,"fmt","","",6],[11,"fmt","","",6],[11,"description","","",6],[14,"log!","","The standard logging macro."],[14,"error!","","Logs a message at the error level."],[14,"warn!","","Logs a message at the warn level."],[14,"info!","","Logs a message at the info level."],[14,"debug!","","Logs a message at the debug level."],[14,"trace!","","Logs a message at the trace level."],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged."]],"paths":[[3,"LogLocation"],[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"]]};
searchIndex['gcc'] = {"items":[[0,"","gcc","A library for build scripts to compile custom C code"],[3,"Config","","Extra configuration to pass to gcc."],[5,"compile_library","","Compile a library from the given set of input C files."],[11,"new","","Construct a new instance of a blank set of configuration.",0],[11,"include","","Add a directory to the `-I` or include path for headers",0],[11,"define","","Specify a `-D` variable with an optional value.",0],[11,"object","","Add an arbitrary object file to link in",0],[11,"flag","","Add an arbitrary flag to the invocation of the compiler",0],[11,"file","","Add a file which will be compiled",0],[11,"compile","","Run the compiler, generating the file `output`",0]],"paths":[[3,"Config"]]};
searchIndex['pkg-config'] = {"items":[[0,"","pkg-config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility."],[3,"Config","",""],[3,"Library","",""],[12,"libs","","",0],[12,"link_paths","","",0],[12,"frameworks","","",0],[12,"framework_paths","","",0],[12,"include_paths","","",0],[5,"target_supported","",""],[5,"find_library","","Simple shortcut for using all default options for finding a library."],[11,"clone","","",1],[11,"fmt","","",0],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1],[11,"statik","","Indicate whether the `--static` flag should be passed.",1],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1],[11,"find","","Run `pkg-config` to find the library `name`.",1]],"paths":[[3,"Library"],[3,"Config"]]};
searchIndex['unicase'] = {"items":[[0,"","unicase","# Case"],[3,"UniCase","","Case Insensitive wrapper of strings."],[11,"fmt","","",0],[11,"clone","","",0],[6,"Target","",""],[11,"deref","","",0],[11,"deref_mut","","",0],[11,"as_slice","","",0],[11,"fmt","","",0],[11,"eq","","",0],[11,"eq","","",0],[6,"Err","",""],[11,"from_str","","",0],[11,"hash","","",0]],"paths":[[3,"UniCase"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries"],[0,"types","",""],[0,"common","libc::types",""],[0,"c95","libc::types::common",""],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C."],[13,"__variant1","","",0],[13,"__variant2","","",0],[4,"FILE","",""],[4,"fpos_t","",""],[0,"c99","libc::types::common",""],[6,"int8_t","libc::types::common::c99",""],[6,"int16_t","",""],[6,"int32_t","",""],[6,"int64_t","",""],[6,"uint8_t","",""],[6,"uint16_t","",""],[6,"uint32_t","",""],[6,"uint64_t","",""],[0,"posix88","libc::types::common",""],[4,"DIR","libc::types::common::posix88",""],[4,"dirent_t","",""],[0,"os","libc::types",""],[0,"common","libc::types::os",""],[0,"posix01","libc::types::os::common",""],[3,"glob_t","libc::types::os::common::posix01",""],[12,"gl_pathc","","",1],[12,"gl_pathv","","",1],[12,"gl_offs","","",1],[12,"__unused1","","",1],[12,"__unused2","","",1],[12,"__unused3","","",1],[12,"__unused4","","",1],[12,"__unused5","","",1],[3,"timeval","",""],[12,"tv_sec","","",2],[12,"tv_usec","","",2],[3,"timespec","",""],[12,"tv_sec","","",3],[12,"tv_nsec","","",3],[4,"timezone","",""],[6,"pthread_t","",""],[6,"sighandler_t","",""],[0,"bsd44","libc::types::os::common",""],[3,"sockaddr","libc::types::os::common::bsd44",""],[12,"sa_family","","",4],[12,"sa_data","","",4],[3,"sockaddr_storage","",""],[12,"ss_family","","",5],[12,"__ss_align","","",5],[12,"__ss_pad2","","",5],[3,"sockaddr_in","",""],[12,"sin_family","","",6],[12,"sin_port","","",6],[12,"sin_addr","","",6],[12,"sin_zero","","",6],[3,"in_addr","",""],[12,"s_addr","","",7],[3,"sockaddr_in6","",""],[12,"sin6_family","","",8],[12,"sin6_port","","",8],[12,"sin6_flowinfo","","",8],[12,"sin6_addr","","",8],[12,"sin6_scope_id","","",8],[3,"in6_addr","",""],[12,"s6_addr","","",9],[3,"ip_mreq","",""],[12,"imr_multiaddr","","",10],[12,"imr_interface","","",10],[3,"ip6_mreq","",""],[12,"ipv6mr_multiaddr","","",11],[12,"ipv6mr_interface","","",11],[3,"addrinfo","",""],[12,"ai_flags","","",12],[12,"ai_family","","",12],[12,"ai_socktype","","",12],[12,"ai_protocol","","",12],[12,"ai_addrlen","","",12],[12,"ai_addr","","",12],[12,"ai_canonname","","",12],[12,"ai_next","","",12],[3,"sockaddr_un","",""],[12,"sun_family","","",13],[12,"sun_path","","",13],[3,"ifaddrs","",""],[12,"ifa_next","","",14],[12,"ifa_name","","",14],[12,"ifa_flags","","",14],[12,"ifa_addr","","",14],[12,"ifa_netmask","","",14],[12,"ifa_ifu","","",14],[12,"ifa_data","","",14],[6,"socklen_t","",""],[6,"sa_family_t","",""],[6,"in_port_t","",""],[6,"in_addr_t","",""],[0,"arch","libc::types::os",""],[0,"c95","libc::types::os::arch",""],[6,"c_char","libc::types::os::arch::c95",""],[6,"c_schar","",""],[6,"c_uchar","",""],[6,"c_short","",""],[6,"c_ushort","",""],[6,"c_int","",""],[6,"c_uint","",""],[6,"c_long","",""],[6,"c_ulong","",""],[6,"c_float","",""],[6,"c_double","",""],[6,"size_t","",""],[6,"ptrdiff_t","",""],[6,"clock_t","",""],[6,"time_t","",""],[6,"suseconds_t","",""],[6,"wchar_t","",""],[0,"c99","libc::types::os::arch",""],[6,"c_longlong","libc::types::os::arch::c99",""],[6,"c_ulonglong","",""],[6,"intptr_t","",""],[6,"uintptr_t","",""],[6,"intmax_t","",""],[6,"uintmax_t","",""],[0,"posix88","libc::types::os::arch",""],[6,"off_t","libc::types::os::arch::posix88",""],[6,"dev_t","",""],[6,"ino_t","",""],[6,"pid_t","",""],[6,"uid_t","",""],[6,"gid_t","",""],[6,"useconds_t","",""],[6,"mode_t","",""],[6,"ssize_t","",""],[0,"posix01","libc::types::os::arch",""],[3,"stat","libc::types::os::arch::posix01",""],[12,"st_dev","","",15],[12,"st_ino","","",15],[12,"st_nlink","","",15],[12,"st_mode","","",15],[12,"st_uid","","",15],[12,"st_gid","","",15],[12,"__pad0","","",15],[12,"st_rdev","","",15],[12,"st_size","","",15],[12,"st_blksize","","",15],[12,"st_blocks","","",15],[12,"st_atime","","",15],[12,"st_atime_nsec","","",15],[12,"st_mtime","","",15],[12,"st_mtime_nsec","","",15],[12,"st_ctime","","",15],[12,"st_ctime_nsec","","",15],[12,"__unused","","",15],[3,"utimbuf","",""],[12,"actime","","",16],[12,"modtime","","",16],[3,"pthread_attr_t","",""],[12,"__size","","",17],[6,"nlink_t","",""],[6,"blksize_t","",""],[6,"blkcnt_t","",""],[0,"extra","libc::types::os::arch",""],[3,"sockaddr_ll","libc::types::os::arch::extra",""],[12,"sll_family","","",18],[12,"sll_protocol","","",18],[12,"sll_ifindex","","",18],[12,"sll_hatype","","",18],[12,"sll_pkttype","","",18],[12,"sll_halen","","",18],[12,"sll_addr","","",18],[0,"consts","libc",""],[0,"os","libc::consts",""],[0,"c95","libc::consts::os",""],[17,"EXIT_FAILURE","libc::consts::os::c95",""],[17,"EXIT_SUCCESS","",""],[17,"RAND_MAX","",""],[17,"EOF","",""],[17,"SEEK_SET","",""],[17,"SEEK_CUR","",""],[17,"SEEK_END","",""],[17,"_IOFBF","",""],[17,"_IONBF","",""],[17,"_IOLBF","",""],[17,"BUFSIZ","",""],[17,"FOPEN_MAX","",""],[17,"FILENAME_MAX","",""],[17,"L_tmpnam","",""],[17,"TMP_MAX","",""],[0,"posix88","libc::consts::os",""],[17,"O_RDONLY","libc::consts::os::posix88",""],[17,"O_WRONLY","",""],[17,"O_RDWR","",""],[17,"O_APPEND","",""],[17,"O_CREAT","",""],[17,"O_EXCL","",""],[17,"O_TRUNC","",""],[17,"S_IFIFO","",""],[17,"S_IFCHR","",""],[17,"S_IFBLK","",""],[17,"S_IFDIR","",""],[17,"S_IFREG","",""],[17,"S_IFLNK","",""],[17,"S_IFMT","",""],[17,"S_IEXEC","",""],[17,"S_IWRITE","",""],[17,"S_IREAD","",""],[17,"S_IRWXU","",""],[17,"S_IXUSR","",""],[17,"S_IWUSR","",""],[17,"S_IRUSR","",""],[17,"F_OK","",""],[17,"R_OK","",""],[17,"W_OK","",""],[17,"X_OK","",""],[17,"STDIN_FILENO","",""],[17,"STDOUT_FILENO","",""],[17,"STDERR_FILENO","",""],[17,"F_LOCK","",""],[17,"F_TEST","",""],[17,"F_TLOCK","",""],[17,"F_ULOCK","",""],[17,"SIGHUP","",""],[17,"SIGINT","",""],[17,"SIGQUIT","",""],[17,"SIGILL","",""],[17,"SIGABRT","",""],[17,"SIGFPE","",""],[17,"SIGKILL","",""],[17,"SIGSEGV","",""],[17,"SIGPIPE","",""],[17,"SIGALRM","",""],[17,"SIGTERM","",""],[17,"PROT_NONE","",""],[17,"PROT_READ","",""],[17,"PROT_WRITE","",""],[17,"PROT_EXEC","",""],[17,"MAP_FILE","",""],[17,"MAP_SHARED","",""],[17,"MAP_PRIVATE","",""],[17,"MAP_FIXED","",""],[17,"MAP_ANON","",""],[17,"MAP_FAILED","",""],[17,"MCL_CURRENT","",""],[17,"MCL_FUTURE","",""],[17,"MS_ASYNC","",""],[17,"MS_INVALIDATE","",""],[17,"MS_SYNC","",""],[17,"EPERM","",""],[17,"ENOENT","",""],[17,"ESRCH","",""],[17,"EINTR","",""],[17,"EIO","",""],[17,"ENXIO","",""],[17,"E2BIG","",""],[17,"ENOEXEC","",""],[17,"EBADF","",""],[17,"ECHILD","",""],[17,"EAGAIN","",""],[17,"ENOMEM","",""],[17,"EACCES","",""],[17,"EFAULT","",""],[17,"ENOTBLK","",""],[17,"EBUSY","",""],[17,"EEXIST","",""],[17,"EXDEV","",""],[17,"ENODEV","",""],[17,"ENOTDIR","",""],[17,"EISDIR","",""],[17,"EINVAL","",""],[17,"ENFILE","",""],[17,"EMFILE","",""],[17,"ENOTTY","",""],[17,"ETXTBSY","",""],[17,"EFBIG","",""],[17,"ENOSPC","",""],[17,"ESPIPE","",""],[17,"EROFS","",""],[17,"EMLINK","",""],[17,"EPIPE","",""],[17,"EDOM","",""],[17,"ERANGE","",""],[17,"EDEADLK","",""],[17,"ENAMETOOLONG","",""],[17,"ENOLCK","",""],[17,"ENOSYS","",""],[17,"ENOTEMPTY","",""],[17,"ELOOP","",""],[17,"EWOULDBLOCK","",""],[17,"ENOMSG","",""],[17,"EIDRM","",""],[17,"ECHRNG","",""],[17,"EL2NSYNC","",""],[17,"EL3HLT","",""],[17,"EL3RST","",""],[17,"ELNRNG","",""],[17,"EUNATCH","",""],[17,"ENOCSI","",""],[17,"EL2HLT","",""],[17,"EBADE","",""],[17,"EBADR","",""],[17,"EXFULL","",""],[17,"ENOANO","",""],[17,"EBADRQC","",""],[17,"EBADSLT","",""],[17,"EDEADLOCK","",""],[17,"EBFONT","",""],[17,"ENOSTR","",""],[17,"ENODATA","",""],[17,"ETIME","",""],[17,"ENOSR","",""],[17,"ENONET","",""],[17,"ENOPKG","",""],[17,"EREMOTE","",""],[17,"ENOLINK","",""],[17,"EADV","",""],[17,"ESRMNT","",""],[17,"ECOMM","",""],[17,"EPROTO","",""],[17,"EMULTIHOP","",""],[17,"EDOTDOT","",""],[17,"EBADMSG","",""],[17,"EOVERFLOW","",""],[17,"ENOTUNIQ","",""],[17,"EBADFD","",""],[17,"EREMCHG","",""],[17,"ELIBACC","",""],[17,"ELIBBAD","",""],[17,"ELIBSCN","",""],[17,"ELIBMAX","",""],[17,"ELIBEXEC","",""],[17,"EILSEQ","",""],[17,"ERESTART","",""],[17,"ESTRPIPE","",""],[17,"EUSERS","",""],[17,"ENOTSOCK","",""],[17,"EDESTADDRREQ","",""],[17,"EMSGSIZE","",""],[17,"EPROTOTYPE","",""],[17,"ENOPROTOOPT","",""],[17,"EPROTONOSUPPORT","",""],[17,"ESOCKTNOSUPPORT","",""],[17,"EOPNOTSUPP","",""],[17,"EPFNOSUPPORT","",""],[17,"EAFNOSUPPORT","",""],[17,"EADDRINUSE","",""],[17,"EADDRNOTAVAIL","",""],[17,"ENETDOWN","",""],[17,"ENETUNREACH","",""],[17,"ENETRESET","",""],[17,"ECONNABORTED","",""],[17,"ECONNRESET","",""],[17,"ENOBUFS","",""],[17,"EISCONN","",""],[17,"ENOTCONN","",""],[17,"ESHUTDOWN","",""],[17,"ETOOMANYREFS","",""],[17,"ETIMEDOUT","",""],[17,"ECONNREFUSED","",""],[17,"EHOSTDOWN","",""],[17,"EHOSTUNREACH","",""],[17,"EALREADY","",""],[17,"EINPROGRESS","",""],[17,"ESTALE","",""],[17,"EUCLEAN","",""],[17,"ENOTNAM","",""],[17,"ENAVAIL","",""],[17,"EISNAM","",""],[17,"EREMOTEIO","",""],[17,"EDQUOT","",""],[17,"ENOMEDIUM","",""],[17,"EMEDIUMTYPE","",""],[17,"ECANCELED","",""],[17,"ENOKEY","",""],[17,"EKEYEXPIRED","",""],[17,"EKEYREVOKED","",""],[17,"EKEYREJECTED","",""],[17,"EOWNERDEAD","",""],[17,"ENOTRECOVERABLE","",""],[17,"ERFKILL","",""],[17,"EHWPOISON","",""],[0,"posix01","libc::consts::os",""],[17,"F_DUPFD","libc::consts::os::posix01",""],[17,"F_GETFD","",""],[17,"F_SETFD","",""],[17,"F_GETFL","",""],[17,"F_SETFL","",""],[17,"SIGTRAP","",""],[17,"SIG_IGN","",""],[17,"GLOB_ERR","",""],[17,"GLOB_MARK","",""],[17,"GLOB_NOSORT","",""],[17,"GLOB_DOOFFS","",""],[17,"GLOB_NOCHECK","",""],[17,"GLOB_APPEND","",""],[17,"GLOB_NOESCAPE","",""],[17,"GLOB_NOSPACE","",""],[17,"GLOB_ABORTED","",""],[17,"GLOB_NOMATCH","",""],[17,"POSIX_MADV_NORMAL","",""],[17,"POSIX_MADV_RANDOM","",""],[17,"POSIX_MADV_SEQUENTIAL","",""],[17,"POSIX_MADV_WILLNEED","",""],[17,"POSIX_MADV_DONTNEED","",""],[17,"_SC_MQ_PRIO_MAX","",""],[17,"_SC_IOV_MAX","",""],[17,"_SC_GETGR_R_SIZE_MAX","",""],[17,"_SC_GETPW_R_SIZE_MAX","",""],[17,"_SC_LOGIN_NAME_MAX","",""],[17,"_SC_TTY_NAME_MAX","",""],[17,"_SC_THREADS","",""],[17,"_SC_THREAD_SAFE_FUNCTIONS","",""],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","",""],[17,"_SC_THREAD_KEYS_MAX","",""],[17,"_SC_THREAD_STACK_MIN","",""],[17,"_SC_THREAD_THREADS_MAX","",""],[17,"_SC_THREAD_ATTR_STACKADDR","",""],[17,"_SC_THREAD_ATTR_STACKSIZE","",""],[17,"_SC_THREAD_PRIORITY_SCHEDULING","",""],[17,"_SC_THREAD_PRIO_INHERIT","",""],[17,"_SC_THREAD_PRIO_PROTECT","",""],[17,"_SC_THREAD_PROCESS_SHARED","",""],[17,"_SC_ATEXIT_MAX","",""],[17,"_SC_XOPEN_VERSION","",""],[17,"_SC_XOPEN_XCU_VERSION","",""],[17,"_SC_XOPEN_UNIX","",""],[17,"_SC_XOPEN_CRYPT","",""],[17,"_SC_XOPEN_ENH_I18N","",""],[17,"_SC_XOPEN_SHM","",""],[17,"_SC_XOPEN_LEGACY","",""],[17,"_SC_XOPEN_REALTIME","",""],[17,"_SC_XOPEN_REALTIME_THREADS","",""],[17,"PTHREAD_CREATE_JOINABLE","",""],[17,"PTHREAD_CREATE_DETACHED","",""],[17,"PTHREAD_STACK_MIN","",""],[17,"CLOCK_REALTIME","",""],[17,"CLOCK_MONOTONIC","",""],[0,"bsd44","libc::consts::os",""],[17,"MADV_NORMAL","libc::consts::os::bsd44",""],[17,"MADV_RANDOM","",""],[17,"MADV_SEQUENTIAL","",""],[17,"MADV_WILLNEED","",""],[17,"MADV_DONTNEED","",""],[17,"MADV_REMOVE","",""],[17,"MADV_DONTFORK","",""],[17,"MADV_DOFORK","",""],[17,"MADV_MERGEABLE","",""],[17,"MADV_UNMERGEABLE","",""],[17,"MADV_HWPOISON","",""],[17,"IFF_LOOPBACK","",""],[17,"AF_UNIX","",""],[17,"AF_INET","",""],[17,"AF_INET6","",""],[17,"SOCK_STREAM","",""],[17,"SOCK_DGRAM","",""],[17,"SOCK_RAW","",""],[17,"IPPROTO_TCP","",""],[17,"IPPROTO_IP","",""],[17,"IPPROTO_IPV6","",""],[17,"IP_MULTICAST_TTL","",""],[17,"IP_MULTICAST_LOOP","",""],[17,"IP_TTL","",""],[17,"IP_HDRINCL","",""],[17,"IP_ADD_MEMBERSHIP","",""],[17,"IP_DROP_MEMBERSHIP","",""],[17,"IPV6_ADD_MEMBERSHIP","",""],[17,"IPV6_DROP_MEMBERSHIP","",""],[17,"TCP_NODELAY","",""],[17,"SOL_SOCKET","",""],[17,"SO_KEEPALIVE","",""],[17,"SO_BROADCAST","",""],[17,"SO_REUSEADDR","",""],[17,"SO_ERROR","",""],[17,"SHUT_RD","",""],[17,"SHUT_WR","",""],[17,"SHUT_RDWR","",""],[0,"extra","libc::consts::os",""],[17,"AF_PACKET","libc::consts::os::extra",""],[17,"IPPROTO_RAW","",""],[17,"O_RSYNC","",""],[17,"O_DSYNC","",""],[17,"O_NONBLOCK","",""],[17,"O_SYNC","",""],[17,"PROT_GROWSDOWN","",""],[17,"PROT_GROWSUP","",""],[17,"MAP_TYPE","",""],[17,"MAP_ANONYMOUS","",""],[17,"MAP_32BIT","",""],[17,"MAP_GROWSDOWN","",""],[17,"MAP_DENYWRITE","",""],[17,"MAP_EXECUTABLE","",""],[17,"MAP_LOCKED","",""],[17,"MAP_NONRESERVE","",""],[17,"MAP_POPULATE","",""],[17,"MAP_NONBLOCK","",""],[17,"MAP_STACK","",""],[0,"sysconf","libc::consts::os",""],[17,"_SC_ARG_MAX","libc::consts::os::sysconf",""],[17,"_SC_CHILD_MAX","",""],[17,"_SC_CLK_TCK","",""],[17,"_SC_NGROUPS_MAX","",""],[17,"_SC_OPEN_MAX","",""],[17,"_SC_STREAM_MAX","",""],[17,"_SC_TZNAME_MAX","",""],[17,"_SC_JOB_CONTROL","",""],[17,"_SC_SAVED_IDS","",""],[17,"_SC_REALTIME_SIGNALS","",""],[17,"_SC_PRIORITY_SCHEDULING","",""],[17,"_SC_TIMERS","",""],[17,"_SC_ASYNCHRONOUS_IO","",""],[17,"_SC_PRIORITIZED_IO","",""],[17,"_SC_SYNCHRONIZED_IO","",""],[17,"_SC_FSYNC","",""],[17,"_SC_MAPPED_FILES","",""],[17,"_SC_MEMLOCK","",""],[17,"_SC_MEMLOCK_RANGE","",""],[17,"_SC_MEMORY_PROTECTION","",""],[17,"_SC_MESSAGE_PASSING","",""],[17,"_SC_SEMAPHORES","",""],[17,"_SC_SHARED_MEMORY_OBJECTS","",""],[17,"_SC_AIO_LISTIO_MAX","",""],[17,"_SC_AIO_MAX","",""],[17,"_SC_AIO_PRIO_DELTA_MAX","",""],[17,"_SC_DELAYTIMER_MAX","",""],[17,"_SC_MQ_OPEN_MAX","",""],[17,"_SC_VERSION","",""],[17,"_SC_PAGESIZE","",""],[17,"_SC_RTSIG_MAX","",""],[17,"_SC_SEM_NSEMS_MAX","",""],[17,"_SC_SEM_VALUE_MAX","",""],[17,"_SC_SIGQUEUE_MAX","",""],[17,"_SC_TIMER_MAX","",""],[17,"_SC_BC_BASE_MAX","",""],[17,"_SC_BC_DIM_MAX","",""],[17,"_SC_BC_SCALE_MAX","",""],[17,"_SC_BC_STRING_MAX","",""],[17,"_SC_COLL_WEIGHTS_MAX","",""],[17,"_SC_EXPR_NEST_MAX","",""],[17,"_SC_LINE_MAX","",""],[17,"_SC_RE_DUP_MAX","",""],[17,"_SC_2_VERSION","",""],[17,"_SC_2_C_BIND","",""],[17,"_SC_2_C_DEV","",""],[17,"_SC_2_FORT_DEV","",""],[17,"_SC_2_FORT_RUN","",""],[17,"_SC_2_SW_DEV","",""],[17,"_SC_2_LOCALEDEF","",""],[17,"_SC_2_CHAR_TERM","",""],[17,"_SC_2_C_VERSION","",""],[17,"_SC_2_UPE","",""],[17,"_SC_XBS5_ILP32_OFF32","",""],[17,"_SC_XBS5_ILP32_OFFBIG","",""],[17,"_SC_XBS5_LPBIG_OFFBIG","",""],[0,"funcs","libc",""],[0,"c95","libc::funcs",""],[0,"ctype","libc::funcs::c95",""],[5,"isalnum","libc::funcs::c95::ctype",""],[5,"isalpha","",""],[5,"iscntrl","",""],[5,"isdigit","",""],[5,"isgraph","",""],[5,"islower","",""],[5,"isprint","",""],[5,"ispunct","",""],[5,"isspace","",""],[5,"isupper","",""],[5,"isxdigit","",""],[5,"tolower","",""],[5,"toupper","",""],[0,"stdio","libc::funcs::c95",""],[5,"fopen","libc::funcs::c95::stdio",""],[5,"freopen","",""],[5,"fflush","",""],[5,"fclose","",""],[5,"remove","",""],[5,"rename","",""],[5,"tmpfile","",""],[5,"setvbuf","",""],[5,"setbuf","",""],[5,"fgetc","",""],[5,"fgets","",""],[5,"fputc","",""],[5,"fputs","",""],[5,"puts","",""],[5,"ungetc","",""],[5,"fread","",""],[5,"fwrite","",""],[5,"fseek","",""],[5,"ftell","",""],[5,"rewind","",""],[5,"fgetpos","",""],[5,"fsetpos","",""],[5,"feof","",""],[5,"ferror","",""],[5,"perror","",""],[0,"stdlib","libc::funcs::c95",""],[5,"abs","libc::funcs::c95::stdlib",""],[5,"labs","",""],[5,"atof","",""],[5,"atoi","",""],[5,"strtod","",""],[5,"strtol","",""],[5,"strtoul","",""],[5,"calloc","",""],[5,"malloc","",""],[5,"realloc","",""],[5,"free","",""],[5,"exit","","Exits the running program in a possibly dangerous manner."],[5,"_exit","",""],[5,"atexit","",""],[5,"system","",""],[5,"getenv","",""],[5,"rand","",""],[5,"srand","",""],[0,"string","libc::funcs::c95",""],[5,"strcpy","libc::funcs::c95::string",""],[5,"strncpy","",""],[5,"strcat","",""],[5,"strncat","",""],[5,"strcmp","",""],[5,"strncmp","",""],[5,"strcoll","",""],[5,"strchr","",""],[5,"strrchr","",""],[5,"strspn","",""],[5,"strcspn","",""],[5,"strpbrk","",""],[5,"strstr","",""],[5,"strlen","",""],[5,"strerror","",""],[5,"strtok","",""],[5,"strxfrm","",""],[5,"wcslen","",""],[5,"memcmp","",""],[5,"memchr","",""],[0,"posix88","libc::funcs",""],[0,"stat_","libc::funcs::posix88",""],[5,"chmod","libc::funcs::posix88::stat_",""],[5,"fchmod","",""],[5,"fstat","",""],[5,"mkdir","",""],[5,"mkfifo","",""],[5,"stat","",""],[0,"stdio","libc::funcs::posix88",""],[5,"popen","libc::funcs::posix88::stdio",""],[5,"pclose","",""],[5,"fdopen","",""],[5,"fileno","",""],[0,"fcntl","libc::funcs::posix88",""],[5,"open","libc::funcs::posix88::fcntl",""],[5,"creat","",""],[5,"fcntl","",""],[0,"dirent","libc::funcs::posix88",""],[5,"opendir","libc::funcs::posix88::dirent",""],[5,"readdir_r","",""],[5,"closedir","",""],[5,"rewinddir","",""],[5,"seekdir","",""],[5,"telldir","",""],[0,"unistd","libc::funcs::posix88",""],[5,"access","libc::funcs::posix88::unistd",""],[5,"alarm","",""],[5,"chdir","",""],[5,"chown","",""],[5,"close","",""],[5,"dup","",""],[5,"dup2","",""],[5,"execv","",""],[5,"execve","",""],[5,"execvp","",""],[5,"fork","",""],[5,"fpathconf","",""],[5,"getcwd","",""],[5,"getegid","",""],[5,"geteuid","",""],[5,"getgid","",""],[5,"getgroups","",""],[5,"getlogin","",""],[5,"getopt","",""],[5,"getpgrp","",""],[5,"getpid","",""],[5,"getppid","",""],[5,"getuid","",""],[5,"getsid","",""],[5,"isatty","",""],[5,"link","",""],[5,"lseek","",""],[5,"pathconf","",""],[5,"pause","",""],[5,"pipe","",""],[5,"read","",""],[5,"rmdir","",""],[5,"setgid","",""],[5,"setpgid","",""],[5,"setsid","",""],[5,"setuid","",""],[5,"sleep","",""],[5,"usleep","",""],[5,"nanosleep","",""],[5,"sysconf","",""],[5,"tcgetpgrp","",""],[5,"ttyname","",""],[5,"unlink","",""],[5,"write","",""],[5,"pread","",""],[5,"pwrite","",""],[5,"utime","",""],[17,"_PC_NAME_MAX","",""],[0,"signal","libc::funcs::posix88",""],[5,"kill","libc::funcs::posix88::signal",""],[0,"mman","libc::funcs::posix88",""],[5,"mlock","libc::funcs::posix88::mman",""],[5,"munlock","",""],[5,"mlockall","",""],[5,"munlockall","",""],[5,"mprotect","",""],[5,"msync","",""],[5,"shm_open","",""],[5,"shm_unlink","",""],[5,"mmap","",""],[5,"munmap","",""],[0,"net","libc::funcs::posix88",""],[5,"if_nametoindex","libc::funcs::posix88::net",""],[0,"posix01","libc::funcs",""],[0,"stat_","libc::funcs::posix01",""],[5,"lstat","libc::funcs::posix01::stat_",""],[0,"unistd","libc::funcs::posix01",""],[5,"readlink","libc::funcs::posix01::unistd",""],[5,"fsync","",""],[5,"fdatasync","",""],[5,"setenv","",""],[5,"unsetenv","",""],[5,"putenv","",""],[5,"symlink","",""],[5,"ftruncate","",""],[0,"signal","libc::funcs::posix01",""],[5,"signal","libc::funcs::posix01::signal",""],[0,"glob","libc::funcs::posix01",""],[5,"glob","libc::funcs::posix01::glob",""],[5,"globfree","",""],[0,"mman","libc::funcs::posix01",""],[5,"posix_madvise","libc::funcs::posix01::mman",""],[0,"bsd43","libc::funcs",""],[5,"socket","libc::funcs::bsd43",""],[5,"connect","",""],[5,"bind","",""],[5,"listen","",""],[5,"accept","",""],[5,"getpeername","",""],[5,"getsockname","",""],[5,"setsockopt","",""],[5,"recv","",""],[5,"send","",""],[5,"recvfrom","",""],[5,"sendto","",""],[5,"getifaddrs","",""],[5,"freeifaddrs","",""],[5,"shutdown","",""],[0,"bsd44","libc::funcs",""],[5,"getdtablesize","libc::funcs::bsd44",""],[5,"ioctl","",""],[5,"madvise","",""],[5,"mincore","",""]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex['matches'] = {"items":[[0,"","matches",""],[14,"matches!","",""],[14,"_tt_as_expr_hack!","","Work around \"error: unexpected token: `an interpolated tt`\", whatever that means."]],"paths":[]};
initSearch(searchIndex);
